// Code generated by goyacc -v test.out -o sql.go sql.y. DO NOT EDIT.

//line sql.y:24
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:24

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:59
type yySymType struct {
	yys                              int
	tableValuedFunctionArguments     TableValuedFunctionArguments
	tableValuedFunctionArgument      *TableValuedFunctionArgument
	tableValuedFunctionArgumentValue TableValuedFunctionArgumentValue
	empty                            struct{}
	statement                        Statement
	selStmt                          SelectStatement
	ddl                              *DDL
	ins                              *Insert
	byt                              byte
	bytes                            []byte
	bytes2                           [][]byte
	str                              string
	strs                             []string
	selectExprs                      SelectExprs
	selectExpr                       SelectExpr
	columns                          Columns
	partitions                       Partitions
	colName                          *ColName
	tableExprs                       TableExprs
	tableExpr                        TableExpr
	joinCondition                    JoinCondition
	tableName                        TableName
	tableNames                       TableNames
	indexHints                       *IndexHints
	expr                             Expr
	exprs                            Exprs
	boolVal                          BoolVal
	sqlVal                           *SQLVal
	colTuple                         ColTuple
	values                           Values
	valTuple                         ValTuple
	subquery                         *Subquery
	whens                            []*When
	when                             *When
	orderBy                          OrderBy
	order                            *Order
	limit                            *Limit
	triggers                         []Trigger
	trigger                          Trigger
	updateExprs                      UpdateExprs
	setExprs                         SetExprs
	updateExpr                       *UpdateExpr
	setExpr                          *SetExpr
	colIdent                         ColIdent
	tableIdent                       TableIdent
	convertType                      *ConvertType
	aliasedTableName                 *AliasedTableExpr
	TableSpec                        *TableSpec
	columnType                       ColumnType
	colKeyOpt                        ColumnKeyOption
	optVal                           Expr
	LengthScaleOption                LengthScaleOption
	columnDefinition                 *ColumnDefinition
	indexDefinition                  *IndexDefinition
	indexInfo                        *IndexInfo
	indexOption                      *IndexOption
	indexOptions                     []*IndexOption
	indexColumn                      *IndexColumn
	indexColumns                     []*IndexColumn
	constraintDefinition             *ConstraintDefinition
	constraintInfo                   ConstraintInfo
	ReferenceAction                  ReferenceAction
	partDefs                         []*PartitionDefinition
	partDef                          *PartitionDefinition
	partSpec                         *PartitionSpec
	vindexParam                      VindexParam
	vindexParams                     []VindexParam
	showFilter                       *ShowFilter
	optLike                          *OptLike
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const WATERMARK = 57362
const DELAY = 57363
const COUNTING = 57364
const AFTER = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const KEY = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const VALUES = 57380
const LAST_INSERT_ID = 57381
const NEXT = 57382
const VALUE = 57383
const SHARE = 57384
const MODE = 57385
const SQL_NO_CACHE = 57386
const SQL_CACHE = 57387
const JOIN = 57388
const STRAIGHT_JOIN = 57389
const LEFT = 57390
const RIGHT = 57391
const INNER = 57392
const OUTER = 57393
const CROSS = 57394
const NATURAL = 57395
const USE = 57396
const FORCE = 57397
const ON = 57398
const USING = 57399
const ID = 57400
const HEX = 57401
const STRING = 57402
const INTEGRAL = 57403
const FLOAT = 57404
const HEXNUM = 57405
const VALUE_ARG = 57406
const LIST_ARG = 57407
const COMMENT = 57408
const COMMENT_KEYWORD = 57409
const BIT_LITERAL = 57410
const NULL = 57411
const TRUE = 57412
const FALSE = 57413
const OFF = 57414
const OR = 57415
const AND = 57416
const NOT = 57417
const BETWEEN = 57418
const CASE = 57419
const WHEN = 57420
const THEN = 57421
const ELSE = 57422
const END = 57423
const LE = 57424
const GE = 57425
const NE = 57426
const NULL_SAFE_EQUAL = 57427
const IS = 57428
const LIKE = 57429
const REGEXP = 57430
const IN = 57431
const RIGHTARROW = 57432
const SHIFT_LEFT = 57433
const SHIFT_RIGHT = 57434
const DIV = 57435
const MOD = 57436
const UNARY = 57437
const COLLATE = 57438
const BINARY = 57439
const UNDERSCORE_BINARY = 57440
const UNDERSCORE_UTF8MB4 = 57441
const INTERVAL = 57442
const JSON_EXTRACT_OP = 57443
const JSON_UNQUOTE_EXTRACT_OP = 57444
const CREATE = 57445
const ALTER = 57446
const DROP = 57447
const RENAME = 57448
const ANALYZE = 57449
const ADD = 57450
const FLUSH = 57451
const SCHEMA = 57452
const TABLE = 57453
const DESCRIPTOR = 57454
const INDEX = 57455
const VIEW = 57456
const TO = 57457
const IGNORE = 57458
const IF = 57459
const UNIQUE = 57460
const PRIMARY = 57461
const COLUMN = 57462
const SPATIAL = 57463
const FULLTEXT = 57464
const KEY_BLOCK_SIZE = 57465
const ACTION = 57466
const CASCADE = 57467
const CONSTRAINT = 57468
const FOREIGN = 57469
const NO = 57470
const REFERENCES = 57471
const RESTRICT = 57472
const SHOW = 57473
const DESCRIBE = 57474
const EXPLAIN = 57475
const DATE = 57476
const ESCAPE = 57477
const REPAIR = 57478
const OPTIMIZE = 57479
const TRUNCATE = 57480
const MAXVALUE = 57481
const PARTITION = 57482
const REORGANIZE = 57483
const LESS = 57484
const THAN = 57485
const PROCEDURE = 57486
const TRIGGER = 57487
const VINDEX = 57488
const VINDEXES = 57489
const STATUS = 57490
const VARIABLES = 57491
const WARNINGS = 57492
const BEGIN = 57493
const START = 57494
const TRANSACTION = 57495
const COMMIT = 57496
const ROLLBACK = 57497
const BIT = 57498
const TINYINT = 57499
const SMALLINT = 57500
const MEDIUMINT = 57501
const INT = 57502
const INTEGER = 57503
const BIGINT = 57504
const INTNUM = 57505
const REAL = 57506
const DOUBLE = 57507
const FLOAT_TYPE = 57508
const DECIMAL = 57509
const NUMERIC = 57510
const TIME = 57511
const TIMESTAMP = 57512
const DATETIME = 57513
const YEAR = 57514
const CHAR = 57515
const VARCHAR = 57516
const BOOL = 57517
const CHARACTER = 57518
const VARBINARY = 57519
const NCHAR = 57520
const TEXT = 57521
const TINYTEXT = 57522
const MEDIUMTEXT = 57523
const LONGTEXT = 57524
const BLOB = 57525
const TINYBLOB = 57526
const MEDIUMBLOB = 57527
const LONGBLOB = 57528
const JSON = 57529
const ENUM = 57530
const GEOMETRY = 57531
const POINT = 57532
const LINESTRING = 57533
const POLYGON = 57534
const GEOMETRYCOLLECTION = 57535
const MULTIPOINT = 57536
const MULTILINESTRING = 57537
const MULTIPOLYGON = 57538
const NULLX = 57539
const AUTO_INCREMENT = 57540
const APPROXNUM = 57541
const SIGNED = 57542
const UNSIGNED = 57543
const ZEROFILL = 57544
const COLLATION = 57545
const DATABASES = 57546
const SCHEMAS = 57547
const TABLES = 57548
const VITESS_KEYSPACES = 57549
const VITESS_SHARDS = 57550
const VITESS_TABLETS = 57551
const VSCHEMA = 57552
const VSCHEMA_TABLES = 57553
const VITESS_TARGET = 57554
const FULL = 57555
const PROCESSLIST = 57556
const COLUMNS = 57557
const FIELDS = 57558
const ENGINES = 57559
const PLUGINS = 57560
const NAMES = 57561
const CHARSET = 57562
const GLOBAL = 57563
const SESSION = 57564
const ISOLATION = 57565
const LEVEL = 57566
const READ = 57567
const WRITE = 57568
const ONLY = 57569
const REPEATABLE = 57570
const COMMITTED = 57571
const UNCOMMITTED = 57572
const SERIALIZABLE = 57573
const CURRENT_TIMESTAMP = 57574
const DATABASE = 57575
const CURRENT_DATE = 57576
const CURRENT_TIME = 57577
const LOCALTIME = 57578
const LOCALTIMESTAMP = 57579
const UTC_DATE = 57580
const UTC_TIME = 57581
const UTC_TIMESTAMP = 57582
const REPLACE = 57583
const CONVERT = 57584
const CAST = 57585
const SUBSTR = 57586
const SUBSTRING = 57587
const GROUP_CONCAT = 57588
const SEPARATOR = 57589
const TIMESTAMPADD = 57590
const TIMESTAMPDIFF = 57591
const MATCH = 57592
const AGAINST = 57593
const BOOLEAN = 57594
const LANGUAGE = 57595
const WITH = 57596
const QUERY = 57597
const EXPANSION = 57598
const UNUSED = 57599

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"WATERMARK",
	"DELAY",
	"COUNTING",
	"AFTER",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"RIGHTARROW",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"DESCRIPTOR",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"VSCHEMA_TABLES",
	"VITESS_TARGET",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 29,
	-2, 4,
	-1, 37,
	165, 299,
	166, 299,
	-2, 289,
	-1, 273,
	117, 655,
	-2, 651,
	-1, 274,
	117, 656,
	-2, 652,
	-1, 342,
	86, 834,
	-2, 63,
	-1, 343,
	86, 790,
	-2, 64,
	-1, 348,
	86, 767,
	-2, 617,
	-1, 350,
	86, 811,
	-2, 619,
	-1, 621,
	1, 351,
	5, 351,
	12, 351,
	13, 351,
	14, 351,
	15, 351,
	17, 351,
	19, 351,
	34, 351,
	35, 351,
	46, 351,
	47, 351,
	48, 351,
	49, 351,
	50, 351,
	52, 351,
	53, 351,
	56, 351,
	57, 351,
	59, 351,
	60, 351,
	162, 351,
	275, 351,
	-2, 378,
	-1, 625,
	57, 44,
	59, 44,
	-2, 48,
	-1, 770,
	117, 658,
	-2, 654,
	-1, 998,
	5, 30,
	-2, 445,
	-1, 1028,
	5, 29,
	-2, 591,
	-1, 1277,
	5, 30,
	-2, 592,
	-1, 1335,
	5, 29,
	-2, 594,
	-1, 1419,
	5, 30,
	-2, 595,
}

const yyPrivate = 57344

const yyLast = 13548

var yyAct = [...]int{

	274, 1466, 1456, 1431, 1126, 1031, 1240, 278, 577, 1405,
	884, 1350, 1303, 1053, 1316, 304, 1177, 291, 1214, 617,
	1174, 252, 1032, 880, 1051, 857, 852, 1178, 927, 1059,
	57, 963, 81, 576, 3, 893, 213, 1080, 883, 213,
	1184, 1149, 347, 805, 243, 1190, 721, 795, 990, 897,
	854, 735, 1106, 1097, 638, 859, 618, 843, 913, 823,
	509, 772, 515, 802, 449, 341, 336, 213, 81, 280,
	923, 637, 213, 276, 213, 261, 529, 333, 836, 338,
	627, 56, 1459, 1437, 1454, 251, 1417, 592, 1451, 244,
	245, 246, 247, 521, 1241, 250, 1436, 24, 25, 52,
	27, 28, 1416, 591, 1166, 1269, 1378, 265, 542, 541,
	551, 552, 544, 545, 546, 547, 548, 549, 550, 543,
	43, 454, 553, 874, 946, 29, 48, 49, 61, 639,
	316, 640, 322, 323, 320, 321, 319, 318, 317, 1209,
	1210, 1208, 945, 875, 876, 38, 324, 325, 503, 54,
	249, 248, 1088, 482, 63, 64, 65, 66, 67, 208,
	204, 804, 205, 206, 499, 1068, 906, 1306, 1067, 467,
	950, 1069, 500, 497, 498, 200, 1322, 202, 914, 944,
	1260, 1258, 242, 492, 493, 1129, 1128, 708, 542, 541,
	551, 552, 544, 545, 546, 547, 548, 549, 550, 543,
	710, 213, 553, 1411, 213, 1453, 1448, 502, 1406, 1125,
	213, 31, 32, 34, 33, 36, 213, 50, 837, 81,
	484, 81, 81, 486, 81, 81, 1470, 81, 1398, 81,
	941, 938, 939, 898, 937, 709, 1351, 1474, 81, 37,
	44, 45, 991, 202, 46, 47, 35, 1359, 480, 1353,
	1054, 1056, 1122, 483, 485, 468, 456, 1130, 1124, 39,
	40, 714, 41, 42, 900, 701, 948, 951, 81, 900,
	1203, 201, 1202, 1201, 452, 711, 459, 215, 203, 1385,
	957, 1379, 207, 956, 1150, 1280, 517, 1136, 900, 1007,
	1064, 518, 1017, 505, 506, 565, 566, 984, 1081, 744,
	633, 533, 943, 474, 543, 464, 1004, 553, 914, 881,
	553, 1226, 870, 1200, 741, 528, 344, 450, 1415, 1352,
	965, 1396, 1152, 1168, 942, 1368, 1188, 736, 1002, 1055,
	1001, 213, 213, 213, 1468, 824, 1086, 1469, 779, 1467,
	81, 1113, 481, 305, 51, 563, 81, 527, 526, 53,
	1360, 1358, 777, 778, 776, 1154, 1123, 1158, 1121, 1153,
	450, 1151, 899, 1227, 528, 526, 1156, 899, 947, 461,
	1111, 462, 641, 903, 463, 1155, 470, 471, 472, 904,
	70, 528, 616, 949, 703, 1401, 899, 519, 1157, 1159,
	523, 896, 894, 448, 895, 51, 565, 566, 199, 892,
	898, 621, 964, 257, 1423, 595, 597, 54, 601, 603,
	626, 606, 737, 565, 566, 631, 71, 775, 1312, 635,
	907, 594, 596, 598, 600, 602, 604, 605, 541, 551,
	552, 544, 545, 546, 547, 548, 549, 550, 543, 1112,
	1311, 553, 747, 748, 1117, 1114, 1107, 1115, 1110, 213,
	527, 526, 1108, 1109, 81, 527, 526, 508, 1101, 213,
	213, 81, 1170, 330, 331, 213, 1116, 528, 213, 1003,
	455, 213, 528, 1100, 824, 213, 1014, 81, 81, 981,
	982, 983, 81, 81, 81, 213, 81, 81, 1475, 1089,
	527, 526, 1425, 81, 81, 542, 541, 551, 552, 544,
	545, 546, 547, 548, 549, 550, 543, 528, 1397, 553,
	546, 547, 548, 549, 550, 543, 1329, 723, 553, 527,
	526, 81, 796, 1309, 797, 213, 1133, 1476, 743, 1098,
	1070, 81, 1071, 1394, 303, 1243, 528, 1356, 1452, 749,
	762, 764, 765, 1427, 508, 715, 763, 457, 458, 1356,
	1409, 508, 773, 544, 545, 546, 547, 548, 549, 550,
	543, 1081, 479, 553, 479, 479, 79, 479, 479, 742,
	479, 1365, 479, 1356, 508, 81, 770, 1356, 1386, 1364,
	768, 479, 1356, 1355, 1301, 1300, 527, 526, 344, 1282,
	508, 1223, 814, 817, 1076, 751, 1279, 508, 825, 828,
	798, 51, 346, 528, 1233, 1232, 774, 766, 81, 81,
	1229, 1230, 901, 809, 720, 213, 562, 1229, 1228, 564,
	996, 508, 54, 213, 719, 213, 840, 508, 213, 213,
	807, 508, 213, 213, 213, 81, 704, 702, 699, 799,
	800, 648, 647, 1175, 476, 469, 1187, 575, 81, 579,
	580, 581, 582, 583, 584, 585, 586, 587, 1442, 590,
	593, 593, 593, 599, 593, 593, 599, 593, 607, 608,
	609, 610, 611, 612, 833, 622, 723, 1060, 865, 1187,
	807, 821, 867, 629, 294, 293, 296, 297, 298, 299,
	58, 1139, 621, 295, 300, 839, 1275, 621, 24, 868,
	871, 621, 213, 81, 863, 81, 629, 1367, 872, 81,
	81, 213, 213, 888, 213, 213, 22, 24, 213, 81,
	840, 915, 916, 917, 840, 24, 1026, 929, 1060, 630,
	1027, 632, 840, 1231, 996, 213, 1199, 213, 213, 996,
	213, 1072, 810, 811, 873, 1020, 816, 819, 820, 1334,
	54, 258, 630, 346, 628, 346, 346, 1019, 346, 346,
	864, 346, 628, 346, 996, 628, 925, 926, 634, 54,
	1438, 832, 346, 834, 835, 1187, 256, 54, 1461, 745,
	713, 1318, 769, 1434, 1433, 908, 1287, 770, 928, 1219,
	1075, 972, 773, 1191, 1192, 1457, 924, 479, 919, 918,
	1127, 931, 531, 54, 479, 1221, 1194, 1175, 973, 1102,
	974, 739, 845, 848, 849, 850, 846, 1432, 847, 851,
	479, 479, 1191, 1192, 717, 479, 479, 479, 1043, 479,
	479, 757, 1197, 1044, 1041, 1196, 479, 479, 986, 1042,
	1040, 213, 213, 213, 213, 213, 774, 1033, 1039, 262,
	263, 507, 1045, 213, 849, 850, 213, 81, 1446, 1435,
	1034, 213, 1135, 1037, 969, 213, 522, 1440, 979, 978,
	1028, 510, 1093, 646, 346, 1403, 477, 1085, 1402, 1273,
	643, 520, 1013, 344, 81, 1332, 1083, 511, 1077, 809,
	1314, 934, 716, 853, 1073, 1062, 885, 1063, 1035, 1036,
	522, 1038, 259, 260, 1444, 1443, 253, 1372, 51, 1046,
	621, 621, 621, 621, 621, 1061, 1058, 254, 980, 977,
	58, 1371, 1320, 579, 1060, 621, 501, 976, 1065, 1463,
	1462, 1463, 81, 81, 621, 1082, 1008, 1092, 1005, 1094,
	1095, 1096, 734, 524, 1382, 1078, 1079, 551, 552, 544,
	545, 546, 547, 548, 549, 550, 543, 1272, 1307, 553,
	740, 81, 60, 62, 55, 995, 855, 856, 1090, 1091,
	1, 622, 1455, 1099, 1242, 622, 213, 1315, 940, 1404,
	1349, 1105, 1213, 1011, 891, 81, 271, 882, 346, 69,
	447, 1118, 68, 769, 478, 346, 542, 541, 551, 552,
	544, 545, 546, 547, 548, 549, 550, 543, 1395, 890,
	553, 346, 346, 889, 1132, 1357, 346, 346, 346, 1305,
	346, 346, 902, 1087, 905, 1220, 1084, 346, 346, 1400,
	81, 81, 1176, 654, 1033, 652, 1143, 653, 651, 656,
	1148, 655, 1167, 1179, 650, 1161, 479, 227, 479, 1142,
	1160, 339, 642, 930, 525, 753, 72, 1120, 81, 1119,
	770, 1186, 479, 1181, 972, 531, 936, 495, 346, 496,
	229, 561, 975, 81, 1066, 81, 81, 345, 909, 910,
	911, 912, 1182, 1195, 1430, 1212, 1410, 746, 514, 1370,
	1205, 1207, 1319, 1012, 920, 921, 922, 588, 1204, 822,
	279, 761, 292, 213, 289, 290, 752, 1025, 535, 801,
	277, 1211, 1216, 985, 1224, 1225, 1217, 1218, 750, 269,
	213, 620, 613, 844, 842, 826, 81, 841, 334, 81,
	81, 213, 885, 1193, 1189, 1291, 1049, 81, 1050, 619,
	213, 1138, 830, 831, 1268, 1377, 267, 756, 26, 59,
	264, 1235, 845, 848, 849, 850, 846, 19, 847, 851,
	18, 17, 20, 1236, 1247, 1238, 508, 16, 1248, 346,
	15, 14, 465, 30, 21, 13, 806, 808, 12, 11,
	1029, 1030, 346, 1256, 622, 622, 622, 622, 622, 10,
	1249, 9, 8, 7, 6, 1033, 5, 1274, 4, 855,
	81, 255, 1057, 23, 2, 0, 0, 0, 622, 621,
	1284, 0, 81, 0, 0, 487, 488, 1283, 489, 490,
	81, 491, 1073, 494, 1290, 1289, 0, 1299, 0, 0,
	0, 0, 504, 1141, 0, 81, 0, 346, 0, 346,
	0, 0, 81, 952, 953, 845, 848, 849, 850, 846,
	0, 847, 851, 346, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1171, 0, 567, 568,
	569, 570, 571, 572, 573, 574, 479, 0, 0, 346,
	81, 81, 0, 81, 0, 0, 0, 1308, 81, 1310,
	213, 1179, 0, 0, 0, 0, 81, 81, 81, 213,
	1341, 0, 81, 1333, 479, 1340, 0, 0, 1345, 1346,
	1347, 0, 1335, 1321, 0, 0, 0, 0, 0, 81,
	1354, 885, 0, 885, 1348, 1361, 0, 0, 0, 0,
	0, 1369, 1362, 0, 1363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 0, 0, 0, 0,
	1179, 1383, 1388, 0, 0, 0, 0, 81, 0, 0,
	0, 1393, 1392, 1387, 0, 0, 0, 0, 81, 81,
	1384, 1180, 0, 51, 826, 0, 0, 0, 0, 1408,
	0, 1413, 1407, 0, 0, 1141, 81, 0, 1418, 0,
	1033, 1052, 0, 0, 0, 0, 0, 0, 993, 213,
	512, 516, 994, 0, 0, 0, 0, 81, 0, 998,
	999, 1000, 0, 621, 1429, 0, 1006, 534, 346, 1009,
	1010, 0, 0, 0, 0, 1016, 0, 0, 0, 1018,
	0, 0, 1021, 1022, 1023, 1024, 1441, 1439, 0, 81,
	0, 0, 0, 0, 0, 0, 1449, 0, 700, 0,
	0, 1447, 578, 0, 1048, 707, 0, 0, 1460, 1271,
	885, 589, 0, 0, 0, 1471, 1103, 346, 0, 0,
	0, 724, 725, 0, 0, 0, 726, 727, 728, 0,
	730, 731, 0, 622, 0, 0, 0, 732, 733, 0,
	1317, 0, 0, 0, 0, 346, 0, 0, 542, 541,
	551, 552, 544, 545, 546, 547, 548, 549, 550, 543,
	1267, 0, 553, 0, 0, 0, 0, 0, 0, 346,
	0, 0, 771, 0, 0, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	0, 0, 0, 0, 0, 1295, 1296, 1297, 0, 0,
	0, 0, 346, 0, 0, 0, 0, 0, 0, 0,
	0, 826, 0, 0, 1183, 1185, 0, 513, 0, 0,
	0, 1253, 1254, 0, 1255, 0, 0, 1257, 479, 1259,
	829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1185, 0, 0, 1147, 0, 0, 0, 0,
	0, 0, 0, 211, 0, 0, 241, 346, 0, 346,
	1215, 0, 0, 0, 0, 0, 1317, 885, 0, 1180,
	0, 1266, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 337, 0, 1302, 1343, 1344, 211,
	0, 211, 0, 0, 0, 0, 0, 0, 738, 1198,
	0, 0, 0, 0, 0, 0, 0, 0, 1366, 0,
	1239, 0, 224, 1244, 1245, 0, 0, 0, 0, 0,
	0, 346, 0, 759, 760, 0, 0, 0, 1180, 0,
	51, 0, 0, 0, 0, 0, 237, 622, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 933, 0, 935,
	542, 541, 551, 552, 544, 545, 546, 547, 548, 549,
	550, 543, 0, 961, 553, 0, 0, 0, 0, 0,
	0, 0, 826, 0, 0, 0, 578, 0, 0, 812,
	813, 0, 0, 0, 1052, 0, 0, 0, 216, 0,
	0, 0, 1250, 0, 0, 219, 346, 0, 0, 1252,
	0, 0, 0, 228, 1304, 223, 0, 0, 0, 0,
	1261, 1262, 0, 0, 987, 988, 989, 0, 211, 346,
	0, 211, 0, 0, 0, 0, 346, 211, 0, 0,
	1276, 1277, 1278, 211, 1281, 0, 226, 0, 879, 0,
	0, 0, 236, 0, 0, 0, 0, 1458, 0, 0,
	0, 0, 0, 0, 1298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1337, 1338, 0, 1339, 217, 0,
	0, 0, 1304, 0, 0, 1265, 0, 0, 0, 0,
	1304, 1304, 1304, 0, 0, 0, 1215, 0, 0, 0,
	0, 0, 0, 0, 0, 230, 220, 221, 0, 231,
	232, 233, 235, 1304, 234, 240, 0, 0, 0, 222,
	225, 0, 218, 239, 238, 0, 0, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 970,
	971, 1399, 516, 624, 0, 0, 0, 0, 211, 211,
	211, 0, 346, 346, 542, 541, 551, 552, 544, 545,
	546, 547, 548, 549, 550, 543, 0, 826, 553, 0,
	1420, 0, 0, 1373, 1374, 1375, 1376, 1104, 0, 210,
	1380, 1381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1428, 0, 0, 0, 1389, 1390, 1391, 0, 0,
	0, 0, 0, 0, 997, 1131, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 451, 0, 453, 0, 0,
	0, 1015, 0, 1304, 0, 0, 0, 1414, 1145, 1146,
	0, 0, 0, 0, 1419, 0, 0, 1421, 1422, 0,
	0, 1162, 1163, 0, 1164, 1165, 1264, 0, 0, 0,
	0, 0, 0, 0, 1426, 0, 1172, 1173, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 211, 0, 0,
	0, 0, 211, 0, 1263, 211, 0, 0, 211, 0,
	0, 0, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1472, 1473, 0, 0, 0, 0,
	0, 0, 1222, 0, 0, 542, 541, 551, 552, 544,
	545, 546, 547, 548, 549, 550, 543, 0, 0, 553,
	0, 0, 211, 0, 460, 0, 0, 466, 0, 0,
	0, 722, 0, 473, 0, 0, 0, 0, 0, 475,
	0, 0, 1134, 542, 541, 551, 552, 544, 545, 546,
	547, 548, 549, 550, 543, 0, 0, 553, 0, 0,
	0, 1251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1144, 0, 268, 0, 0, 0, 0, 268, 268,
	0, 0, 268, 268, 268, 0, 0, 0, 827, 0,
	0, 1169, 542, 541, 551, 552, 544, 545, 546, 547,
	548, 549, 550, 543, 0, 0, 553, 268, 268, 268,
	268, 0, 211, 0, 0, 0, 0, 992, 0, 0,
	211, 0, 861, 0, 0, 211, 211, 0, 0, 211,
	869, 722, 0, 0, 0, 0, 0, 1206, 542, 541,
	551, 552, 544, 545, 546, 547, 548, 549, 550, 543,
	0, 0, 553, 0, 615, 0, 625, 0, 0, 1313,
	542, 541, 551, 552, 544, 545, 546, 547, 548, 549,
	550, 543, 0, 0, 553, 0, 0, 0, 0, 0,
	1323, 1324, 1325, 1326, 1327, 0, 0, 0, 1330, 1331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 211,
	0, 211, 211, 0, 0, 211, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 966, 967, 0, 211, 0, 671,
	0, 0, 722, 0, 0, 0, 0, 1270, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 578, 0, 0,
	0, 0, 0, 0, 0, 1285, 0, 0, 1286, 0,
	0, 1288, 649, 0, 0, 0, 0, 1292, 0, 0,
	0, 0, 705, 706, 0, 0, 0, 0, 712, 0,
	0, 335, 0, 0, 718, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 659, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 827, 211, 211,
	211, 211, 211, 0, 0, 0, 0, 0, 758, 0,
	1047, 0, 0, 211, 0, 0, 672, 0, 861, 0,
	0, 0, 211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1464, 0, 0, 685, 688,
	689, 690, 691, 692, 693, 0, 694, 695, 696, 697,
	698, 673, 674, 675, 676, 657, 658, 686, 0, 660,
	0, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 677, 678, 679, 680, 681, 682, 683, 684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1412, 578,
	0, 0, 866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 687, 0, 0, 0, 0, 537,
	0, 540, 0, 268, 0, 0, 0, 554, 555, 556,
	557, 558, 559, 560, 268, 538, 539, 536, 0, 542,
	541, 551, 552, 544, 545, 546, 547, 548, 549, 550,
	543, 1445, 0, 553, 0, 722, 0, 0, 0, 0,
	0, 1450, 0, 0, 827, 932, 0, 0, 0, 0,
	0, 0, 0, 0, 954, 955, 0, 958, 959, 0,
	0, 960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 194, 104, 100, 82, 0, 962, 530,
	0, 0, 0, 968, 106, 0, 0, 0, 0, 0,
	123, 0, 125, 0, 0, 163, 134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 80, 0, 532, 0, 0, 0,
	211, 0, 0, 97, 0, 0, 0, 0, 0, 527,
	526, 0, 0, 0, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 149,
	0, 166, 114, 122, 84, 91, 0, 113, 140, 154,
	158, 0, 0, 0, 101, 827, 156, 144, 178, 0,
	145, 155, 126, 171, 150, 0, 185, 186, 168, 184,
	193, 85, 167, 177, 98, 159, 87, 175, 165, 132,
	118, 119, 86, 0, 153, 105, 110, 103, 141, 172,
	173, 102, 197, 92, 183, 89, 93, 182, 139, 170,
	176, 133, 130, 88, 174, 131, 129, 121, 108, 115,
	147, 128, 148, 116, 136, 135, 137, 0, 0, 0,
	164, 180, 198, 95, 0, 160, 169, 187, 188, 189,
	190, 191, 192, 0, 0, 96, 111, 107, 146, 138,
	94, 117, 161, 120, 127, 152, 196, 143, 157, 99,
	179, 162, 0, 0, 0, 0, 0, 1342, 0, 0,
	0, 0, 0, 0, 0, 0, 861, 0, 0, 1137,
	0, 83, 90, 124, 195, 151, 109, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1237, 0, 0, 0, 0, 0, 0,
	0, 0, 435, 423, 1246, 394, 438, 372, 386, 446,
	387, 388, 416, 358, 402, 142, 384, 194, 104, 100,
	82, 0, 375, 353, 381, 354, 373, 396, 106, 399,
	371, 425, 405, 437, 123, 444, 125, 410, 0, 163,
	134, 0, 0, 398, 427, 400, 421, 393, 417, 363,
	409, 439, 385, 414, 440, 0, 0, 0, 80, 0,
	886, 887, 0, 0, 0, 0, 0, 97, 0, 412,
	434, 383, 413, 415, 352, 411, 0, 356, 359, 445,
	429, 378, 379, 1074, 0, 0, 0, 0, 0, 0,
	397, 401, 418, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 376, 0, 408, 0, 0, 0, 360,
	357, 0, 0, 395, 0, 0, 0, 362, 0, 377,
	419, 0, 351, 112, 422, 428, 0, 392, 214, 432,
	390, 389, 436, 149, 0, 166, 114, 122, 84, 91,
	0, 113, 140, 154, 158, 426, 374, 382, 101, 380,
	156, 144, 178, 407, 145, 155, 126, 171, 150, 433,
	185, 186, 168, 184, 193, 85, 167, 177, 98, 159,
	87, 175, 165, 132, 118, 119, 86, 0, 153, 105,
	110, 103, 141, 172, 173, 102, 197, 92, 183, 89,
	93, 182, 139, 170, 176, 133, 130, 88, 174, 131,
	129, 121, 108, 115, 147, 128, 148, 116, 136, 135,
	137, 0, 355, 0, 164, 180, 198, 95, 370, 160,
	169, 187, 188, 189, 190, 191, 192, 0, 0, 96,
	111, 107, 146, 138, 94, 117, 161, 120, 127, 152,
	196, 143, 157, 99, 179, 162, 366, 369, 364, 365,
	403, 404, 441, 442, 443, 420, 361, 0, 367, 368,
	0, 424, 430, 431, 406, 83, 90, 124, 195, 151,
	109, 181, 1424, 435, 423, 0, 394, 438, 372, 386,
	446, 387, 388, 416, 358, 402, 142, 384, 194, 104,
	100, 82, 0, 375, 353, 381, 354, 373, 396, 106,
	399, 371, 425, 405, 437, 123, 444, 125, 410, 0,
	163, 134, 0, 0, 398, 427, 400, 421, 393, 417,
	363, 409, 439, 385, 414, 440, 0, 0, 0, 80,
	0, 886, 887, 0, 0, 0, 0, 0, 97, 0,
	412, 434, 383, 413, 415, 352, 411, 0, 356, 359,
	445, 429, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 397, 401, 418, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 408, 0, 0, 0,
	360, 357, 0, 0, 395, 0, 0, 0, 362, 0,
	377, 419, 0, 351, 112, 422, 428, 0, 392, 214,
	432, 390, 389, 436, 149, 0, 166, 114, 122, 84,
	91, 0, 113, 140, 154, 158, 426, 374, 382, 101,
	380, 156, 144, 178, 407, 145, 155, 126, 171, 150,
	433, 185, 186, 168, 184, 193, 85, 167, 177, 98,
	159, 87, 175, 165, 132, 118, 119, 86, 0, 153,
	105, 110, 103, 141, 172, 173, 102, 197, 92, 183,
	89, 93, 182, 139, 170, 176, 133, 130, 88, 174,
	131, 129, 121, 108, 115, 147, 128, 148, 116, 136,
	135, 137, 0, 355, 0, 164, 180, 198, 95, 370,
	160, 169, 187, 188, 189, 190, 191, 192, 0, 0,
	96, 111, 107, 146, 138, 94, 117, 161, 120, 127,
	152, 196, 143, 157, 99, 179, 162, 366, 369, 364,
	365, 403, 404, 441, 442, 443, 420, 361, 0, 367,
	368, 0, 424, 430, 431, 406, 83, 90, 124, 195,
	151, 109, 181, 435, 423, 0, 394, 438, 372, 386,
	446, 387, 388, 416, 358, 402, 142, 384, 194, 104,
	100, 82, 0, 375, 353, 381, 354, 373, 396, 106,
	399, 371, 425, 405, 437, 123, 444, 125, 410, 0,
	163, 134, 0, 0, 398, 427, 400, 421, 393, 417,
	363, 409, 439, 385, 414, 440, 54, 0, 0, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	412, 434, 383, 413, 415, 352, 411, 0, 356, 359,
	445, 429, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 397, 401, 418, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 408, 0, 0, 0,
	360, 357, 0, 0, 395, 0, 0, 0, 362, 0,
	377, 419, 0, 351, 112, 422, 428, 0, 392, 214,
	432, 390, 389, 436, 149, 0, 166, 114, 122, 84,
	91, 0, 113, 140, 154, 158, 426, 374, 382, 101,
	380, 156, 144, 178, 407, 145, 155, 126, 171, 150,
	433, 185, 186, 168, 184, 193, 85, 167, 177, 98,
	159, 87, 175, 165, 132, 118, 119, 86, 0, 153,
	105, 110, 103, 141, 172, 173, 102, 197, 92, 183,
	89, 93, 182, 139, 170, 176, 133, 130, 88, 174,
	131, 129, 121, 108, 115, 147, 128, 148, 116, 136,
	135, 137, 0, 355, 0, 164, 180, 198, 95, 370,
	160, 169, 187, 188, 189, 190, 191, 192, 0, 0,
	96, 111, 107, 146, 138, 94, 117, 161, 120, 127,
	152, 196, 143, 157, 99, 179, 162, 366, 369, 364,
	365, 403, 404, 441, 442, 443, 420, 361, 0, 367,
	368, 0, 424, 430, 431, 406, 83, 90, 124, 195,
	151, 109, 181, 435, 423, 0, 394, 438, 372, 386,
	446, 387, 388, 416, 358, 402, 142, 384, 194, 104,
	100, 82, 0, 375, 353, 381, 354, 373, 396, 106,
	399, 371, 425, 405, 437, 123, 444, 125, 410, 0,
	163, 134, 0, 0, 398, 427, 400, 421, 393, 417,
	363, 409, 439, 385, 414, 440, 0, 0, 0, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	412, 434, 383, 413, 415, 352, 411, 0, 356, 359,
	445, 429, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 397, 401, 418, 391, 0, 0, 0, 0, 0,
	0, 0, 1140, 0, 376, 0, 408, 0, 0, 0,
	360, 357, 0, 0, 395, 0, 0, 0, 362, 0,
	377, 419, 0, 351, 112, 422, 428, 0, 392, 214,
	432, 390, 389, 436, 149, 0, 166, 114, 122, 84,
	91, 0, 113, 140, 154, 158, 426, 374, 382, 101,
	380, 156, 144, 178, 407, 145, 155, 126, 171, 150,
	433, 185, 186, 168, 184, 193, 85, 167, 177, 98,
	159, 87, 175, 165, 132, 118, 119, 86, 0, 153,
	105, 110, 103, 141, 172, 173, 102, 197, 92, 183,
	89, 93, 182, 139, 170, 176, 133, 130, 88, 174,
	131, 129, 121, 108, 115, 147, 128, 148, 116, 136,
	135, 137, 0, 355, 0, 164, 180, 198, 95, 370,
	160, 169, 187, 188, 189, 190, 191, 192, 0, 0,
	96, 111, 107, 146, 138, 94, 117, 161, 120, 127,
	152, 196, 143, 157, 99, 179, 162, 366, 369, 364,
	365, 403, 404, 441, 442, 443, 420, 361, 0, 367,
	368, 0, 424, 430, 431, 406, 83, 90, 124, 195,
	151, 109, 181, 435, 423, 0, 394, 438, 372, 386,
	446, 387, 388, 416, 358, 402, 142, 384, 194, 104,
	100, 82, 0, 375, 353, 381, 354, 373, 396, 106,
	399, 371, 425, 405, 437, 123, 444, 125, 410, 0,
	163, 134, 0, 0, 398, 427, 400, 421, 393, 417,
	363, 409, 439, 385, 414, 440, 0, 0, 0, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	412, 434, 383, 413, 415, 352, 411, 0, 356, 359,
	445, 429, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 397, 401, 418, 391, 0, 0, 0, 0, 0,
	0, 0, 870, 0, 376, 0, 408, 0, 0, 0,
	360, 357, 0, 0, 395, 0, 0, 0, 362, 0,
	377, 419, 0, 351, 112, 422, 428, 0, 392, 214,
	432, 390, 389, 436, 149, 0, 166, 114, 122, 84,
	91, 0, 113, 140, 154, 158, 426, 374, 382, 101,
	380, 156, 144, 178, 407, 145, 155, 126, 171, 150,
	433, 185, 186, 168, 184, 193, 85, 167, 177, 98,
	159, 87, 175, 165, 132, 118, 119, 86, 0, 153,
	105, 110, 103, 141, 172, 173, 102, 197, 92, 183,
	89, 93, 182, 139, 170, 176, 133, 130, 88, 174,
	131, 129, 121, 108, 115, 147, 128, 148, 116, 136,
	135, 137, 0, 355, 0, 164, 180, 198, 95, 370,
	160, 169, 187, 188, 189, 190, 191, 192, 0, 0,
	96, 111, 107, 146, 138, 94, 117, 161, 120, 127,
	152, 196, 143, 157, 99, 179, 162, 366, 369, 364,
	365, 403, 404, 441, 442, 443, 420, 361, 0, 367,
	368, 0, 424, 430, 431, 406, 83, 90, 124, 195,
	151, 109, 181, 435, 423, 0, 394, 438, 372, 386,
	446, 387, 388, 416, 358, 402, 142, 384, 194, 104,
	100, 82, 0, 375, 353, 381, 354, 373, 396, 106,
	399, 371, 425, 405, 437, 123, 444, 125, 410, 0,
	163, 134, 0, 0, 398, 427, 400, 421, 393, 417,
	363, 409, 439, 385, 414, 440, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	412, 434, 383, 413, 415, 352, 411, 0, 356, 359,
	445, 429, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 397, 401, 418, 391, 0, 0, 0, 0, 0,
	0, 0, 767, 0, 376, 0, 408, 0, 0, 0,
	360, 357, 0, 0, 395, 0, 0, 0, 362, 0,
	377, 419, 0, 351, 112, 422, 428, 0, 392, 214,
	432, 390, 389, 436, 149, 0, 166, 114, 122, 84,
	91, 0, 113, 140, 154, 158, 426, 374, 382, 101,
	380, 156, 144, 178, 407, 145, 155, 126, 171, 150,
	433, 185, 186, 168, 184, 193, 85, 167, 177, 98,
	159, 87, 175, 165, 132, 118, 119, 86, 0, 153,
	105, 110, 103, 141, 172, 173, 102, 197, 92, 183,
	89, 93, 182, 139, 170, 176, 133, 130, 88, 174,
	131, 129, 121, 108, 115, 147, 128, 148, 116, 136,
	135, 137, 0, 355, 0, 164, 180, 198, 95, 370,
	160, 169, 187, 188, 189, 190, 191, 192, 0, 0,
	96, 111, 107, 146, 138, 94, 117, 161, 120, 127,
	152, 196, 143, 157, 99, 179, 162, 366, 369, 364,
	365, 403, 404, 441, 442, 443, 420, 361, 0, 367,
	368, 0, 424, 430, 431, 406, 83, 90, 124, 195,
	151, 109, 181, 435, 423, 0, 394, 438, 372, 386,
	446, 387, 388, 416, 358, 402, 142, 384, 194, 104,
	100, 82, 0, 375, 353, 381, 354, 373, 396, 106,
	399, 371, 425, 405, 437, 123, 444, 125, 410, 0,
	163, 134, 0, 0, 398, 427, 400, 421, 393, 417,
	363, 409, 439, 385, 414, 440, 0, 0, 0, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	412, 434, 383, 413, 415, 352, 411, 0, 356, 359,
	445, 429, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 397, 401, 418, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 408, 0, 0, 0,
	360, 357, 0, 0, 395, 0, 0, 0, 362, 0,
	377, 419, 0, 351, 112, 422, 428, 0, 392, 214,
	432, 390, 389, 436, 149, 0, 166, 114, 122, 84,
	91, 0, 113, 140, 154, 158, 426, 374, 382, 101,
	380, 156, 144, 178, 407, 145, 155, 126, 171, 150,
	433, 185, 186, 168, 184, 193, 85, 167, 177, 98,
	159, 87, 175, 165, 132, 118, 119, 86, 0, 153,
	105, 110, 103, 141, 172, 173, 102, 197, 92, 183,
	89, 93, 182, 139, 170, 176, 133, 130, 88, 174,
	131, 129, 121, 108, 115, 147, 128, 148, 116, 136,
	135, 137, 0, 355, 0, 164, 180, 198, 95, 370,
	160, 169, 187, 188, 189, 190, 191, 192, 0, 0,
	96, 111, 107, 146, 138, 94, 117, 161, 120, 127,
	152, 196, 143, 157, 99, 179, 162, 366, 369, 364,
	365, 403, 404, 441, 442, 443, 420, 361, 0, 367,
	368, 0, 424, 430, 431, 406, 83, 90, 124, 195,
	151, 109, 181, 435, 423, 0, 394, 438, 372, 386,
	446, 387, 388, 416, 358, 402, 142, 384, 194, 104,
	100, 82, 0, 375, 353, 381, 354, 373, 396, 106,
	399, 371, 425, 405, 437, 123, 444, 125, 410, 0,
	163, 134, 0, 0, 398, 427, 400, 421, 393, 417,
	363, 409, 439, 385, 414, 440, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	412, 434, 383, 413, 415, 352, 411, 0, 356, 359,
	445, 429, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 397, 401, 418, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 408, 0, 0, 0,
	360, 357, 0, 0, 395, 0, 0, 0, 362, 0,
	377, 419, 0, 351, 112, 422, 428, 0, 392, 214,
	432, 390, 389, 436, 149, 0, 166, 114, 122, 84,
	91, 0, 113, 140, 154, 158, 426, 374, 382, 101,
	380, 156, 144, 178, 407, 145, 155, 126, 171, 150,
	433, 185, 186, 168, 184, 193, 85, 167, 177, 98,
	159, 87, 175, 165, 132, 118, 119, 86, 0, 153,
	105, 110, 103, 141, 172, 173, 102, 197, 92, 183,
	89, 93, 182, 139, 170, 176, 133, 130, 88, 174,
	131, 129, 121, 108, 115, 147, 128, 148, 116, 136,
	135, 137, 0, 355, 0, 164, 180, 198, 95, 370,
	160, 169, 187, 188, 189, 190, 191, 192, 0, 0,
	96, 111, 107, 146, 138, 94, 117, 161, 120, 127,
	152, 196, 143, 157, 99, 179, 162, 366, 369, 364,
	365, 403, 404, 441, 442, 443, 420, 361, 0, 367,
	368, 0, 424, 430, 431, 406, 83, 90, 124, 195,
	151, 109, 181, 435, 423, 0, 394, 438, 372, 386,
	446, 387, 388, 416, 358, 402, 142, 384, 194, 104,
	100, 82, 0, 375, 353, 381, 354, 373, 396, 106,
	399, 371, 425, 405, 437, 123, 444, 125, 410, 0,
	163, 134, 0, 0, 398, 427, 400, 421, 393, 417,
	363, 409, 439, 385, 414, 440, 0, 0, 0, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	412, 434, 383, 413, 415, 352, 411, 0, 356, 359,
	445, 429, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 397, 401, 418, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 408, 0, 0, 0,
	360, 357, 0, 0, 395, 0, 0, 0, 362, 0,
	377, 419, 0, 351, 112, 422, 428, 0, 392, 214,
	432, 390, 389, 436, 149, 0, 166, 114, 122, 84,
	91, 0, 113, 140, 154, 158, 426, 374, 382, 101,
	380, 156, 144, 178, 407, 145, 155, 126, 171, 150,
	433, 185, 186, 168, 184, 193, 85, 167, 177, 98,
	159, 87, 175, 165, 132, 118, 119, 86, 0, 153,
	105, 110, 103, 141, 172, 173, 102, 197, 92, 183,
	89, 349, 182, 139, 170, 176, 133, 130, 88, 174,
	131, 129, 121, 108, 115, 147, 128, 148, 116, 136,
	135, 137, 0, 355, 0, 164, 180, 198, 95, 370,
	160, 169, 187, 188, 189, 190, 191, 192, 0, 0,
	96, 111, 107, 146, 350, 348, 117, 161, 120, 127,
	152, 196, 143, 157, 99, 179, 162, 366, 369, 364,
	365, 403, 404, 441, 442, 443, 420, 361, 0, 367,
	368, 0, 424, 430, 431, 406, 83, 90, 124, 195,
	151, 109, 181, 435, 423, 0, 394, 438, 372, 386,
	446, 387, 388, 416, 358, 402, 142, 384, 194, 104,
	100, 82, 0, 375, 353, 381, 354, 373, 396, 106,
	399, 371, 425, 405, 437, 123, 444, 125, 410, 0,
	163, 134, 0, 0, 398, 427, 400, 421, 393, 417,
	363, 409, 439, 385, 414, 440, 0, 0, 0, 212,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	412, 434, 383, 413, 415, 352, 411, 0, 356, 359,
	445, 429, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 397, 401, 418, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 408, 0, 0, 0,
	360, 357, 0, 0, 395, 0, 0, 0, 362, 0,
	377, 419, 0, 351, 112, 422, 428, 0, 392, 214,
	432, 390, 389, 436, 149, 0, 166, 114, 122, 84,
	91, 0, 113, 140, 154, 158, 426, 374, 382, 101,
	380, 156, 144, 178, 407, 145, 155, 126, 171, 150,
	433, 185, 186, 168, 184, 193, 85, 167, 177, 98,
	159, 87, 175, 165, 132, 118, 119, 86, 0, 153,
	105, 110, 103, 141, 172, 173, 102, 197, 92, 183,
	89, 93, 182, 139, 170, 176, 133, 130, 88, 174,
	131, 129, 121, 108, 115, 147, 128, 148, 116, 136,
	135, 137, 0, 355, 0, 164, 180, 198, 95, 370,
	160, 169, 187, 188, 189, 190, 191, 192, 0, 0,
	96, 111, 107, 146, 138, 94, 117, 161, 120, 127,
	152, 196, 143, 157, 99, 179, 162, 366, 369, 364,
	365, 403, 404, 441, 442, 443, 420, 361, 0, 367,
	368, 0, 424, 430, 431, 406, 83, 90, 124, 195,
	151, 109, 181, 435, 423, 0, 394, 438, 372, 386,
	446, 387, 388, 416, 358, 402, 142, 384, 194, 104,
	100, 82, 0, 375, 353, 381, 354, 373, 396, 106,
	399, 371, 425, 405, 437, 123, 444, 125, 410, 0,
	163, 134, 0, 0, 398, 427, 400, 421, 393, 417,
	363, 409, 439, 385, 414, 440, 0, 0, 0, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	412, 434, 383, 413, 415, 352, 411, 0, 356, 359,
	445, 429, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 397, 401, 418, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 408, 0, 0, 0,
	360, 357, 0, 0, 395, 0, 0, 0, 362, 0,
	377, 419, 0, 351, 112, 422, 428, 0, 392, 214,
	432, 390, 389, 436, 149, 0, 166, 114, 122, 84,
	91, 0, 113, 140, 154, 158, 426, 374, 382, 101,
	380, 156, 144, 178, 407, 145, 155, 126, 171, 150,
	433, 185, 186, 168, 184, 193, 85, 167, 636, 98,
	159, 87, 175, 165, 132, 118, 119, 86, 0, 153,
	105, 110, 103, 141, 172, 173, 102, 197, 92, 183,
	89, 349, 182, 139, 170, 176, 133, 130, 88, 174,
	131, 129, 121, 108, 115, 147, 128, 148, 116, 136,
	135, 137, 0, 355, 0, 164, 180, 198, 95, 370,
	160, 169, 187, 188, 189, 190, 191, 192, 0, 0,
	96, 111, 107, 146, 350, 348, 117, 161, 120, 127,
	152, 196, 143, 157, 99, 179, 162, 366, 369, 364,
	365, 403, 404, 441, 442, 443, 420, 361, 0, 367,
	368, 0, 424, 430, 431, 406, 83, 90, 124, 195,
	151, 109, 181, 435, 423, 0, 394, 438, 372, 386,
	446, 387, 388, 416, 358, 402, 142, 384, 194, 104,
	100, 82, 0, 375, 353, 381, 354, 373, 396, 106,
	399, 371, 425, 405, 437, 123, 444, 125, 410, 0,
	163, 134, 0, 0, 398, 427, 400, 421, 393, 417,
	363, 409, 439, 385, 414, 440, 0, 0, 0, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	412, 434, 383, 413, 415, 352, 411, 0, 356, 359,
	445, 429, 378, 379, 0, 0, 0, 0, 0, 0,
	0, 397, 401, 418, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 376, 0, 408, 0, 0, 0,
	360, 357, 0, 0, 395, 0, 0, 0, 362, 0,
	377, 419, 0, 351, 112, 422, 428, 0, 392, 214,
	432, 390, 389, 436, 149, 0, 166, 114, 122, 84,
	91, 0, 113, 140, 154, 158, 426, 374, 382, 101,
	380, 156, 144, 178, 407, 145, 155, 126, 171, 150,
	433, 185, 186, 168, 184, 193, 85, 167, 340, 98,
	159, 87, 175, 165, 132, 118, 119, 86, 0, 153,
	105, 110, 103, 141, 172, 173, 102, 197, 92, 183,
	89, 349, 182, 139, 170, 176, 133, 130, 88, 174,
	131, 129, 121, 108, 115, 147, 128, 148, 116, 136,
	135, 137, 0, 355, 0, 164, 180, 198, 95, 370,
	160, 169, 187, 188, 189, 190, 191, 192, 0, 0,
	96, 111, 107, 146, 350, 348, 343, 342, 120, 127,
	152, 196, 143, 157, 99, 179, 162, 366, 369, 364,
	365, 403, 404, 441, 442, 443, 420, 361, 0, 367,
	368, 0, 424, 430, 431, 406, 83, 90, 124, 195,
	151, 109, 181, 142, 0, 194, 104, 100, 82, 0,
	0, 0, 275, 0, 0, 0, 106, 0, 272, 0,
	0, 0, 123, 315, 125, 0, 0, 163, 134, 0,
	0, 0, 0, 306, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 0, 0, 273, 294, 293, 296,
	297, 298, 299, 0, 0, 97, 295, 300, 301, 302,
	0, 0, 0, 270, 287, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 285, 0,
	0, 0, 0, 328, 0, 286, 0, 0, 281, 282,
	283, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 1293, 1294, 0, 214, 0, 0, 326,
	0, 149, 0, 166, 114, 122, 84, 91, 0, 113,
	140, 154, 158, 0, 0, 0, 101, 0, 156, 144,
	178, 0, 145, 155, 126, 171, 150, 0, 185, 186,
	168, 184, 193, 85, 167, 177, 98, 159, 87, 175,
	165, 132, 118, 119, 86, 0, 153, 105, 110, 103,
	141, 172, 173, 102, 197, 92, 183, 89, 93, 182,
	139, 170, 176, 133, 130, 88, 174, 131, 129, 121,
	108, 115, 147, 128, 148, 116, 136, 135, 137, 0,
	0, 0, 164, 180, 198, 95, 0, 160, 169, 187,
	188, 189, 190, 191, 192, 0, 0, 96, 111, 107,
	146, 138, 94, 117, 161, 120, 127, 152, 196, 143,
	157, 99, 179, 162, 316, 327, 322, 323, 320, 321,
	319, 318, 317, 329, 308, 309, 310, 311, 313, 0,
	324, 325, 312, 83, 90, 124, 195, 151, 109, 181,
	142, 0, 194, 104, 100, 82, 0, 0, 0, 275,
	0, 0, 0, 106, 0, 272, 0, 0, 0, 123,
	315, 125, 0, 0, 163, 134, 0, 0, 0, 0,
	306, 307, 0, 0, 0, 0, 0, 0, 877, 0,
	54, 0, 0, 273, 294, 293, 296, 297, 298, 299,
	0, 0, 97, 295, 300, 301, 302, 878, 0, 0,
	270, 287, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 285, 0, 0, 0, 0,
	328, 0, 286, 0, 0, 281, 282, 283, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 214, 0, 0, 326, 0, 149, 0,
	166, 114, 122, 84, 91, 0, 113, 140, 154, 158,
	0, 0, 0, 101, 0, 156, 144, 178, 0, 145,
	155, 126, 171, 150, 0, 185, 186, 168, 184, 193,
	85, 167, 177, 98, 159, 87, 175, 165, 132, 118,
	119, 86, 0, 153, 105, 110, 103, 141, 172, 173,
	102, 197, 92, 183, 89, 93, 182, 139, 170, 176,
	133, 130, 88, 174, 131, 129, 121, 108, 115, 147,
	128, 148, 116, 136, 135, 137, 0, 0, 0, 164,
	180, 198, 95, 0, 160, 169, 187, 188, 189, 190,
	191, 192, 0, 0, 96, 111, 107, 146, 138, 94,
	117, 161, 120, 127, 152, 196, 143, 157, 99, 179,
	162, 316, 327, 322, 323, 320, 321, 319, 318, 317,
	329, 308, 309, 310, 311, 313, 0, 324, 325, 312,
	83, 90, 124, 195, 151, 109, 181, 142, 0, 194,
	104, 100, 82, 0, 803, 0, 275, 0, 0, 0,
	106, 0, 272, 0, 0, 0, 123, 315, 125, 0,
	0, 163, 134, 0, 0, 0, 0, 306, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 54, 0, 0,
	273, 294, 293, 296, 297, 298, 299, 0, 0, 97,
	295, 300, 301, 302, 0, 0, 0, 270, 287, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 285, 266, 0, 0, 0, 328, 0, 286,
	0, 0, 281, 282, 283, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	214, 0, 0, 326, 0, 149, 0, 166, 114, 122,
	84, 91, 0, 113, 140, 154, 158, 0, 0, 0,
	101, 0, 156, 144, 178, 0, 145, 155, 126, 171,
	150, 0, 185, 186, 168, 184, 193, 85, 167, 177,
	98, 159, 87, 175, 165, 132, 118, 119, 86, 0,
	153, 105, 110, 103, 141, 172, 173, 102, 197, 92,
	183, 89, 93, 182, 139, 170, 176, 133, 130, 88,
	174, 131, 129, 121, 108, 115, 147, 128, 148, 116,
	136, 135, 137, 0, 0, 0, 164, 180, 198, 95,
	0, 160, 169, 187, 188, 189, 190, 191, 192, 0,
	0, 96, 111, 107, 146, 138, 94, 117, 161, 120,
	127, 152, 196, 143, 157, 99, 179, 162, 316, 327,
	322, 323, 320, 321, 319, 318, 317, 329, 308, 309,
	310, 311, 313, 0, 324, 325, 312, 83, 90, 124,
	195, 151, 109, 181, 142, 0, 194, 104, 100, 82,
	0, 0, 0, 275, 0, 0, 0, 106, 0, 272,
	0, 0, 0, 123, 315, 125, 0, 0, 163, 134,
	0, 0, 0, 0, 306, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 0, 508, 273, 294, 293,
	296, 297, 298, 299, 0, 0, 97, 295, 300, 301,
	302, 0, 0, 0, 270, 287, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 285,
	0, 0, 0, 0, 328, 0, 286, 0, 0, 281,
	282, 283, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 214, 0, 0,
	326, 0, 149, 0, 166, 114, 122, 84, 91, 0,
	113, 140, 154, 158, 0, 0, 0, 101, 0, 156,
	144, 178, 0, 145, 155, 126, 171, 150, 0, 185,
	186, 168, 184, 193, 85, 167, 177, 98, 159, 87,
	175, 165, 132, 118, 119, 86, 0, 153, 105, 110,
	103, 141, 172, 173, 102, 197, 92, 183, 89, 93,
	182, 139, 170, 176, 133, 130, 88, 174, 131, 129,
	121, 108, 115, 147, 128, 148, 116, 136, 135, 137,
	0, 0, 0, 164, 180, 198, 95, 0, 160, 169,
	187, 188, 189, 190, 191, 192, 0, 0, 96, 111,
	107, 146, 138, 94, 117, 161, 120, 127, 152, 196,
	143, 157, 99, 179, 162, 316, 327, 322, 323, 320,
	321, 319, 318, 317, 329, 308, 309, 310, 311, 313,
	0, 324, 325, 312, 83, 90, 124, 195, 151, 109,
	181, 142, 0, 194, 104, 100, 82, 0, 0, 0,
	275, 0, 0, 0, 106, 0, 272, 0, 0, 0,
	123, 315, 125, 0, 0, 163, 134, 0, 0, 0,
	0, 306, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 54, 0, 0, 273, 294, 293, 296, 297, 298,
	299, 0, 0, 97, 295, 300, 301, 302, 0, 0,
	0, 270, 287, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 285, 266, 0, 0,
	0, 328, 0, 286, 0, 0, 281, 282, 283, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 214, 0, 0, 326, 0, 149,
	0, 166, 114, 122, 84, 91, 0, 113, 140, 154,
	158, 0, 0, 0, 101, 0, 156, 144, 178, 0,
	145, 155, 126, 171, 150, 0, 185, 186, 168, 184,
	193, 85, 167, 177, 98, 159, 87, 175, 165, 132,
	118, 119, 86, 0, 153, 105, 110, 103, 141, 172,
	173, 102, 197, 92, 183, 89, 93, 182, 139, 170,
	176, 133, 130, 88, 174, 131, 129, 121, 108, 115,
	147, 128, 148, 116, 136, 135, 137, 0, 0, 0,
	164, 180, 198, 95, 0, 160, 169, 187, 188, 189,
	190, 191, 192, 0, 0, 96, 111, 107, 146, 138,
	94, 117, 161, 120, 127, 152, 196, 143, 157, 99,
	179, 162, 316, 327, 322, 323, 320, 321, 319, 318,
	317, 329, 308, 309, 310, 311, 313, 0, 324, 325,
	312, 83, 90, 124, 195, 151, 109, 181, 142, 0,
	194, 104, 100, 82, 0, 0, 0, 275, 0, 0,
	0, 106, 0, 272, 0, 0, 0, 123, 315, 125,
	0, 0, 163, 134, 0, 0, 0, 0, 306, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 54, 0,
	0, 273, 294, 818, 296, 297, 298, 299, 0, 0,
	97, 295, 300, 301, 302, 0, 0, 0, 270, 287,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 285, 266, 0, 0, 0, 328, 0,
	286, 0, 0, 281, 282, 283, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 214, 0, 0, 326, 0, 149, 0, 166, 114,
	122, 84, 91, 0, 113, 140, 154, 158, 0, 0,
	0, 101, 0, 156, 144, 178, 0, 145, 155, 126,
	171, 150, 0, 185, 186, 168, 184, 193, 85, 167,
	177, 98, 159, 87, 175, 165, 132, 118, 119, 86,
	0, 153, 105, 110, 103, 141, 172, 173, 102, 197,
	92, 183, 89, 93, 182, 139, 170, 176, 133, 130,
	88, 174, 131, 129, 121, 108, 115, 147, 128, 148,
	116, 136, 135, 137, 0, 0, 0, 164, 180, 198,
	95, 0, 160, 169, 187, 188, 189, 190, 191, 192,
	0, 0, 96, 111, 107, 146, 138, 94, 117, 161,
	120, 127, 152, 196, 143, 157, 99, 179, 162, 316,
	327, 322, 323, 320, 321, 319, 318, 317, 329, 308,
	309, 310, 311, 313, 0, 324, 325, 312, 83, 90,
	124, 195, 151, 109, 181, 142, 0, 194, 104, 100,
	82, 0, 0, 0, 275, 0, 0, 0, 106, 0,
	272, 0, 0, 0, 123, 315, 125, 0, 0, 163,
	134, 0, 0, 0, 0, 306, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 54, 0, 0, 273, 294,
	815, 296, 297, 298, 299, 0, 0, 97, 295, 300,
	301, 302, 0, 0, 0, 270, 287, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	285, 266, 0, 0, 0, 328, 0, 286, 0, 0,
	281, 282, 283, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 214, 0,
	0, 326, 0, 149, 0, 166, 114, 122, 84, 91,
	0, 113, 140, 154, 158, 0, 0, 0, 101, 0,
	156, 144, 178, 0, 145, 155, 126, 171, 150, 0,
	185, 186, 168, 184, 193, 85, 167, 177, 98, 159,
	87, 175, 165, 132, 118, 119, 86, 0, 153, 105,
	110, 103, 141, 172, 173, 102, 197, 92, 183, 89,
	93, 182, 139, 170, 176, 133, 130, 88, 174, 131,
	129, 121, 108, 115, 147, 128, 148, 116, 136, 135,
	137, 0, 0, 0, 164, 180, 198, 95, 0, 160,
	169, 187, 188, 189, 190, 191, 192, 0, 0, 96,
	111, 107, 146, 138, 94, 117, 161, 120, 127, 152,
	196, 143, 157, 99, 179, 162, 316, 327, 322, 323,
	320, 321, 319, 318, 317, 329, 308, 309, 310, 311,
	313, 24, 324, 325, 312, 83, 90, 124, 195, 151,
	109, 181, 0, 142, 0, 194, 104, 100, 82, 0,
	0, 0, 275, 0, 0, 0, 106, 0, 272, 0,
	0, 0, 123, 315, 125, 0, 0, 163, 134, 0,
	0, 0, 0, 306, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 0, 0, 273, 294, 293, 296,
	297, 298, 299, 0, 0, 97, 295, 300, 301, 302,
	0, 0, 0, 270, 287, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 285, 0,
	0, 0, 0, 328, 0, 286, 0, 0, 281, 282,
	283, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 214, 0, 0, 326,
	0, 149, 0, 166, 114, 122, 84, 91, 0, 113,
	140, 154, 158, 0, 0, 0, 101, 0, 156, 144,
	178, 0, 145, 155, 126, 171, 150, 0, 185, 186,
	168, 184, 193, 85, 167, 177, 98, 159, 87, 175,
	165, 132, 118, 119, 86, 0, 153, 105, 110, 103,
	141, 172, 173, 102, 197, 92, 183, 89, 93, 182,
	139, 170, 176, 133, 130, 88, 174, 131, 129, 121,
	108, 115, 147, 128, 148, 116, 136, 135, 137, 0,
	0, 0, 164, 180, 198, 95, 0, 160, 169, 187,
	188, 189, 190, 191, 192, 0, 0, 96, 111, 107,
	146, 138, 94, 117, 161, 120, 127, 152, 196, 143,
	157, 99, 179, 162, 316, 327, 322, 323, 320, 321,
	319, 318, 317, 329, 308, 309, 310, 311, 313, 0,
	324, 325, 312, 83, 90, 124, 195, 151, 109, 181,
	142, 0, 194, 104, 100, 82, 0, 0, 0, 275,
	0, 0, 0, 106, 0, 272, 0, 0, 0, 123,
	315, 125, 0, 0, 163, 134, 0, 0, 0, 0,
	306, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	54, 0, 0, 273, 294, 293, 296, 297, 298, 299,
	0, 0, 97, 295, 300, 301, 302, 0, 0, 0,
	270, 287, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 285, 0, 0, 0, 0,
	328, 0, 286, 0, 0, 281, 282, 283, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 214, 0, 0, 326, 0, 149, 0,
	166, 114, 122, 84, 91, 0, 113, 140, 154, 158,
	0, 0, 0, 101, 0, 156, 144, 178, 0, 145,
	155, 126, 171, 150, 0, 185, 186, 168, 184, 193,
	85, 167, 177, 98, 159, 87, 175, 165, 132, 118,
	119, 86, 0, 153, 105, 110, 103, 141, 172, 173,
	102, 197, 92, 183, 89, 93, 182, 139, 170, 176,
	133, 130, 88, 174, 131, 129, 121, 108, 115, 147,
	128, 148, 116, 136, 135, 137, 0, 0, 0, 164,
	180, 198, 95, 0, 160, 169, 187, 188, 189, 190,
	191, 192, 0, 0, 96, 111, 107, 146, 138, 94,
	117, 161, 120, 127, 152, 196, 143, 157, 99, 179,
	162, 316, 327, 322, 323, 320, 321, 319, 318, 317,
	329, 308, 309, 310, 311, 313, 0, 324, 325, 312,
	83, 90, 124, 195, 151, 109, 181, 142, 0, 194,
	104, 100, 82, 0, 0, 0, 0, 0, 0, 0,
	106, 0, 0, 0, 0, 0, 123, 315, 125, 0,
	0, 163, 134, 0, 0, 0, 0, 306, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 54, 0, 0,
	273, 294, 293, 296, 297, 298, 299, 0, 0, 97,
	295, 300, 301, 302, 0, 0, 0, 0, 287, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 285, 0, 0, 0, 0, 328, 0, 286,
	0, 0, 281, 282, 283, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	214, 0, 0, 326, 0, 149, 0, 166, 114, 122,
	84, 91, 0, 113, 140, 154, 158, 0, 0, 0,
	101, 0, 156, 144, 178, 1465, 145, 155, 126, 171,
	150, 0, 185, 186, 168, 184, 193, 85, 167, 177,
	98, 159, 87, 175, 165, 132, 118, 119, 86, 0,
	153, 105, 110, 103, 141, 172, 173, 102, 197, 92,
	183, 89, 93, 182, 139, 170, 176, 133, 130, 88,
	174, 131, 129, 121, 108, 115, 147, 128, 148, 116,
	136, 135, 137, 0, 0, 0, 164, 180, 198, 95,
	0, 160, 169, 187, 188, 189, 190, 191, 192, 0,
	0, 96, 111, 107, 146, 138, 94, 117, 161, 120,
	127, 152, 196, 143, 157, 99, 179, 162, 316, 327,
	322, 323, 320, 321, 319, 318, 317, 329, 308, 309,
	310, 311, 313, 0, 324, 325, 312, 83, 90, 124,
	195, 151, 109, 181, 142, 0, 194, 104, 100, 82,
	0, 0, 0, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 123, 315, 125, 0, 0, 163, 134,
	0, 0, 0, 0, 306, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 0, 508, 273, 294, 293,
	296, 297, 298, 299, 0, 0, 97, 295, 300, 301,
	302, 0, 0, 0, 0, 287, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 285,
	0, 0, 0, 0, 328, 0, 286, 0, 0, 281,
	282, 283, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 214, 0, 0,
	326, 0, 149, 0, 166, 114, 122, 84, 91, 0,
	113, 140, 154, 158, 0, 0, 0, 101, 0, 156,
	144, 178, 0, 145, 155, 126, 171, 150, 0, 185,
	186, 168, 184, 193, 85, 167, 177, 98, 159, 87,
	175, 165, 132, 118, 119, 86, 0, 153, 105, 110,
	103, 141, 172, 173, 102, 197, 92, 183, 89, 93,
	182, 139, 170, 176, 133, 130, 88, 174, 131, 129,
	121, 108, 115, 147, 128, 148, 116, 136, 135, 137,
	0, 0, 0, 164, 180, 198, 95, 0, 160, 169,
	187, 188, 189, 190, 191, 192, 0, 0, 96, 111,
	107, 146, 138, 94, 117, 161, 120, 127, 152, 196,
	143, 157, 99, 179, 162, 316, 327, 322, 323, 320,
	321, 319, 318, 317, 329, 308, 309, 310, 311, 313,
	0, 324, 325, 312, 83, 90, 124, 195, 151, 109,
	181, 142, 0, 194, 104, 100, 82, 0, 0, 0,
	0, 0, 0, 0, 106, 0, 0, 0, 0, 0,
	123, 315, 125, 0, 0, 163, 134, 0, 0, 0,
	0, 306, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 54, 0, 0, 273, 294, 293, 296, 297, 298,
	299, 0, 0, 97, 295, 300, 301, 302, 0, 0,
	0, 0, 287, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 285, 0, 0, 0,
	0, 328, 0, 286, 0, 0, 281, 282, 283, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 214, 0, 0, 326, 0, 149,
	0, 166, 114, 122, 84, 91, 0, 113, 140, 154,
	158, 0, 0, 0, 101, 0, 156, 144, 178, 0,
	145, 155, 126, 171, 150, 0, 185, 186, 168, 184,
	193, 85, 167, 177, 98, 159, 87, 175, 165, 132,
	118, 119, 86, 0, 153, 105, 110, 103, 141, 172,
	173, 102, 197, 92, 183, 89, 93, 182, 139, 170,
	176, 133, 130, 88, 174, 131, 129, 121, 108, 115,
	147, 128, 148, 116, 136, 135, 137, 0, 0, 0,
	164, 180, 198, 95, 0, 160, 169, 187, 188, 189,
	190, 191, 192, 0, 0, 96, 111, 107, 146, 138,
	94, 117, 161, 120, 127, 152, 196, 143, 157, 99,
	179, 162, 316, 327, 322, 323, 320, 321, 319, 318,
	317, 329, 308, 309, 310, 311, 313, 0, 324, 325,
	312, 83, 90, 124, 195, 151, 109, 181, 142, 0,
	194, 104, 100, 82, 0, 0, 0, 0, 0, 0,
	0, 106, 0, 0, 0, 0, 0, 123, 0, 125,
	0, 0, 163, 134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 542, 541,
	551, 552, 544, 545, 546, 547, 548, 549, 550, 543,
	0, 0, 553, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 149, 0, 166, 114,
	122, 84, 91, 0, 113, 140, 154, 158, 0, 0,
	0, 101, 0, 156, 144, 178, 0, 145, 155, 126,
	171, 150, 0, 185, 186, 168, 184, 193, 85, 167,
	177, 98, 159, 87, 175, 165, 132, 118, 119, 86,
	0, 153, 105, 110, 103, 141, 172, 173, 102, 197,
	92, 183, 89, 93, 182, 139, 170, 176, 133, 130,
	88, 174, 131, 129, 121, 108, 115, 147, 128, 148,
	116, 136, 135, 137, 0, 0, 0, 164, 180, 198,
	95, 0, 160, 169, 187, 188, 189, 190, 191, 192,
	0, 0, 96, 111, 107, 146, 138, 94, 117, 161,
	120, 127, 152, 196, 143, 157, 99, 179, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 194, 104, 100, 82, 83, 90,
	124, 195, 151, 109, 181, 106, 0, 0, 0, 0,
	0, 123, 0, 125, 0, 0, 163, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 76, 77, 0, 0, 73, 0, 0, 0, 78,
	149, 0, 166, 114, 122, 84, 91, 0, 113, 140,
	154, 158, 0, 0, 0, 101, 0, 156, 144, 178,
	0, 145, 155, 126, 171, 150, 0, 185, 186, 168,
	184, 193, 85, 167, 177, 98, 159, 87, 175, 165,
	132, 118, 119, 86, 0, 153, 105, 110, 103, 141,
	172, 173, 102, 197, 92, 183, 89, 93, 182, 139,
	170, 176, 133, 130, 88, 174, 131, 129, 121, 108,
	115, 147, 128, 148, 116, 136, 135, 137, 0, 0,
	0, 164, 180, 198, 95, 0, 160, 169, 187, 188,
	189, 190, 191, 192, 0, 0, 96, 111, 107, 146,
	138, 94, 117, 161, 120, 127, 152, 196, 143, 157,
	99, 179, 162, 0, 75, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 83, 90, 124, 195, 151, 109, 181, 142,
	0, 194, 104, 100, 82, 0, 0, 860, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 0, 123, 0,
	125, 0, 0, 163, 134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 862, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 0,
	0, 0, 214, 0, 0, 0, 0, 149, 0, 166,
	114, 122, 84, 91, 0, 113, 140, 154, 158, 0,
	0, 0, 101, 0, 156, 144, 178, 0, 145, 155,
	126, 171, 150, 0, 185, 186, 168, 184, 193, 85,
	167, 177, 98, 159, 87, 175, 165, 132, 118, 119,
	86, 0, 153, 105, 110, 103, 141, 172, 173, 102,
	197, 92, 183, 89, 93, 182, 139, 170, 176, 133,
	130, 88, 174, 131, 129, 121, 108, 115, 147, 128,
	148, 116, 136, 135, 137, 0, 0, 0, 164, 180,
	198, 95, 0, 160, 169, 187, 188, 189, 190, 191,
	192, 0, 0, 96, 111, 107, 146, 138, 94, 117,
	161, 120, 127, 152, 196, 143, 157, 99, 179, 162,
	0, 24, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 194, 104, 100, 82, 83,
	90, 124, 195, 151, 109, 181, 106, 0, 0, 0,
	0, 0, 123, 0, 125, 0, 0, 163, 134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 149, 0, 166, 114, 122, 84, 91, 0, 113,
	140, 154, 158, 0, 0, 0, 101, 0, 156, 144,
	178, 0, 145, 155, 126, 171, 150, 0, 185, 186,
	168, 184, 193, 85, 167, 177, 98, 159, 87, 175,
	165, 132, 118, 119, 86, 0, 153, 105, 110, 103,
	141, 172, 173, 102, 197, 92, 183, 89, 93, 182,
	139, 170, 176, 133, 130, 88, 174, 131, 129, 121,
	108, 115, 147, 128, 148, 116, 136, 135, 137, 0,
	0, 0, 164, 180, 198, 95, 0, 160, 169, 187,
	188, 189, 190, 191, 192, 0, 0, 96, 111, 107,
	146, 138, 94, 117, 161, 120, 127, 152, 196, 143,
	157, 99, 179, 162, 0, 24, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 194,
	104, 100, 82, 83, 90, 124, 195, 151, 109, 181,
	106, 0, 0, 0, 0, 0, 123, 0, 125, 0,
	0, 163, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 54, 0, 0,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 149, 0, 166, 114, 122,
	84, 91, 0, 113, 140, 154, 158, 0, 0, 0,
	101, 0, 156, 144, 178, 0, 145, 155, 126, 171,
	150, 0, 185, 186, 168, 184, 193, 85, 167, 177,
	98, 159, 87, 175, 165, 132, 118, 119, 86, 0,
	153, 105, 110, 103, 141, 172, 173, 102, 197, 92,
	183, 89, 93, 182, 139, 170, 176, 133, 130, 88,
	174, 131, 129, 121, 108, 115, 147, 128, 148, 116,
	136, 135, 137, 0, 0, 0, 164, 180, 198, 95,
	0, 160, 169, 187, 188, 189, 190, 191, 192, 0,
	0, 96, 111, 107, 146, 138, 94, 117, 161, 120,
	127, 152, 196, 143, 157, 99, 179, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 83, 90, 124,
	195, 151, 109, 181, 142, 0, 194, 104, 100, 82,
	0, 0, 860, 0, 0, 0, 0, 106, 0, 0,
	0, 0, 0, 123, 0, 125, 0, 0, 163, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 862,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 149, 0, 166, 114, 122, 84, 91, 0,
	113, 140, 154, 158, 0, 0, 0, 101, 0, 156,
	144, 178, 0, 858, 155, 126, 171, 150, 0, 185,
	186, 168, 184, 193, 85, 167, 177, 98, 159, 87,
	175, 165, 132, 118, 119, 86, 0, 153, 105, 110,
	103, 141, 172, 173, 102, 197, 92, 183, 89, 93,
	182, 139, 170, 176, 133, 130, 88, 174, 131, 129,
	121, 108, 115, 147, 128, 148, 116, 136, 135, 137,
	0, 0, 0, 164, 180, 198, 95, 0, 160, 169,
	187, 188, 189, 190, 191, 192, 0, 0, 96, 111,
	107, 146, 138, 94, 117, 161, 120, 127, 152, 196,
	143, 157, 99, 179, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 0,
	194, 104, 100, 82, 83, 90, 124, 195, 151, 109,
	181, 106, 0, 0, 0, 0, 0, 123, 0, 125,
	0, 0, 163, 134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 0, 754, 0, 0, 755, 0, 0,
	97, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 214, 0, 0, 0, 0, 149, 0, 166, 114,
	122, 84, 91, 0, 113, 140, 154, 158, 0, 0,
	0, 101, 0, 156, 144, 178, 0, 145, 155, 126,
	171, 150, 0, 185, 186, 168, 184, 193, 85, 167,
	177, 98, 159, 87, 175, 165, 132, 118, 119, 86,
	0, 153, 105, 110, 103, 141, 172, 173, 102, 197,
	92, 183, 89, 93, 182, 139, 170, 176, 133, 130,
	88, 174, 131, 129, 121, 108, 115, 147, 128, 148,
	116, 136, 135, 137, 0, 0, 0, 164, 180, 198,
	95, 0, 160, 169, 187, 188, 189, 190, 191, 192,
	0, 0, 96, 111, 107, 146, 138, 94, 117, 161,
	120, 127, 152, 196, 143, 157, 99, 179, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 0, 194, 104, 100, 82, 83, 90,
	124, 195, 151, 109, 181, 106, 0, 645, 0, 0,
	0, 123, 0, 125, 0, 0, 163, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 80, 0, 644, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	149, 0, 166, 114, 122, 84, 91, 0, 113, 140,
	154, 158, 0, 0, 0, 101, 0, 156, 144, 178,
	0, 145, 155, 126, 171, 150, 0, 185, 186, 168,
	184, 193, 85, 167, 177, 98, 159, 87, 175, 165,
	132, 118, 119, 86, 0, 153, 105, 110, 103, 141,
	172, 173, 102, 197, 92, 183, 89, 93, 182, 139,
	170, 176, 133, 130, 88, 174, 131, 129, 121, 108,
	115, 147, 128, 148, 116, 136, 135, 137, 0, 0,
	0, 164, 180, 198, 95, 0, 160, 169, 187, 188,
	189, 190, 191, 192, 0, 0, 96, 111, 107, 146,
	138, 94, 117, 161, 120, 127, 152, 196, 143, 157,
	99, 179, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 0, 194, 104,
	100, 82, 83, 90, 124, 195, 151, 109, 181, 106,
	0, 0, 0, 0, 0, 123, 0, 125, 0, 0,
	163, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 54, 0, 0, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 149, 0, 166, 114, 122, 84,
	91, 0, 113, 140, 154, 158, 0, 0, 0, 101,
	0, 156, 144, 178, 0, 145, 155, 126, 171, 150,
	0, 185, 186, 168, 184, 193, 85, 167, 177, 98,
	159, 87, 175, 165, 132, 118, 119, 86, 0, 153,
	105, 110, 103, 141, 172, 173, 102, 197, 92, 183,
	89, 93, 182, 139, 170, 176, 133, 130, 88, 174,
	131, 129, 121, 108, 115, 147, 128, 148, 116, 136,
	135, 137, 0, 0, 0, 164, 180, 198, 95, 0,
	160, 169, 187, 188, 189, 190, 191, 192, 0, 0,
	96, 111, 107, 146, 138, 94, 117, 161, 120, 127,
	152, 196, 143, 157, 99, 179, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 194, 104, 100, 82, 83, 90, 124, 195,
	151, 109, 181, 106, 0, 0, 0, 0, 0, 123,
	0, 125, 0, 0, 163, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 862, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 149, 0,
	166, 114, 122, 84, 91, 0, 113, 140, 154, 158,
	0, 0, 0, 101, 0, 156, 144, 178, 0, 145,
	155, 126, 171, 150, 0, 185, 186, 168, 184, 193,
	85, 167, 177, 98, 159, 87, 175, 165, 132, 118,
	119, 86, 0, 153, 105, 110, 103, 141, 172, 173,
	102, 197, 92, 183, 89, 93, 182, 139, 170, 176,
	133, 130, 88, 174, 131, 129, 121, 108, 115, 147,
	128, 148, 116, 136, 135, 137, 0, 0, 0, 164,
	180, 198, 95, 0, 160, 169, 187, 188, 189, 190,
	191, 192, 0, 0, 96, 111, 107, 146, 138, 94,
	117, 161, 120, 127, 152, 196, 143, 157, 99, 179,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 194, 104, 100, 82,
	83, 90, 124, 195, 151, 109, 181, 106, 0, 0,
	0, 0, 0, 123, 0, 125, 0, 0, 163, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 532,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 214, 0, 0,
	0, 0, 149, 0, 166, 114, 122, 84, 91, 0,
	113, 140, 154, 158, 0, 0, 0, 101, 0, 156,
	144, 178, 0, 145, 155, 126, 171, 150, 0, 185,
	186, 168, 184, 193, 85, 167, 177, 98, 159, 87,
	175, 165, 132, 118, 119, 86, 0, 153, 105, 110,
	103, 141, 172, 173, 102, 197, 92, 183, 89, 93,
	182, 139, 170, 176, 133, 130, 88, 174, 131, 129,
	121, 108, 115, 147, 128, 148, 116, 136, 135, 137,
	0, 0, 0, 164, 180, 198, 95, 0, 160, 169,
	187, 188, 189, 190, 191, 192, 0, 0, 96, 111,
	107, 146, 138, 94, 117, 161, 120, 127, 152, 196,
	143, 157, 99, 179, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 83, 90, 124, 195, 151, 109,
	181, 142, 0, 194, 104, 100, 82, 0, 0, 0,
	0, 0, 0, 614, 106, 0, 0, 0, 0, 0,
	123, 0, 125, 0, 0, 163, 134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 149,
	0, 166, 114, 122, 84, 91, 0, 113, 140, 154,
	158, 0, 0, 0, 101, 0, 156, 144, 178, 0,
	145, 155, 126, 171, 150, 0, 185, 186, 168, 184,
	193, 85, 167, 177, 98, 159, 87, 175, 165, 132,
	118, 119, 86, 0, 153, 105, 110, 103, 141, 172,
	173, 102, 197, 92, 183, 89, 93, 182, 139, 170,
	176, 133, 130, 88, 174, 131, 129, 121, 108, 115,
	147, 128, 148, 116, 136, 135, 137, 0, 0, 0,
	164, 180, 198, 95, 0, 160, 169, 187, 188, 189,
	190, 191, 192, 0, 0, 96, 111, 107, 146, 138,
	94, 117, 161, 120, 127, 152, 196, 143, 157, 99,
	179, 162, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 142, 0, 194, 104, 100,
	82, 83, 90, 124, 195, 151, 109, 181, 106, 0,
	0, 0, 0, 0, 123, 0, 125, 0, 0, 163,
	134, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 214, 0,
	0, 0, 0, 149, 0, 166, 114, 122, 84, 91,
	0, 113, 140, 154, 158, 0, 0, 0, 101, 0,
	156, 144, 178, 0, 145, 155, 126, 171, 150, 0,
	185, 186, 168, 184, 193, 85, 167, 177, 98, 159,
	87, 175, 165, 132, 118, 119, 86, 0, 153, 105,
	110, 103, 141, 172, 173, 102, 197, 92, 183, 89,
	93, 182, 139, 170, 176, 133, 130, 88, 174, 131,
	129, 121, 108, 115, 147, 128, 148, 116, 136, 135,
	137, 0, 0, 0, 164, 180, 198, 95, 0, 160,
	169, 187, 188, 189, 190, 191, 192, 0, 0, 96,
	111, 107, 146, 138, 94, 117, 161, 120, 127, 152,
	196, 143, 157, 99, 179, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 194, 104, 100, 82, 83, 90, 124, 195, 151,
	109, 181, 106, 0, 0, 0, 0, 0, 123, 0,
	125, 0, 0, 163, 134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 0, 209,
	0, 0, 214, 0, 0, 0, 0, 149, 0, 166,
	114, 122, 84, 91, 0, 113, 140, 154, 158, 0,
	0, 0, 101, 0, 156, 144, 178, 0, 145, 155,
	126, 171, 150, 0, 185, 186, 168, 184, 193, 85,
	167, 177, 98, 159, 87, 175, 165, 132, 118, 119,
	86, 0, 153, 105, 110, 103, 141, 172, 173, 102,
	197, 92, 183, 89, 93, 182, 139, 170, 176, 133,
	130, 88, 174, 131, 129, 121, 108, 115, 147, 128,
	148, 116, 136, 135, 137, 0, 0, 0, 164, 180,
	198, 95, 0, 160, 169, 187, 188, 189, 190, 191,
	192, 0, 0, 96, 111, 107, 146, 138, 94, 117,
	161, 120, 127, 152, 196, 143, 157, 99, 179, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 194, 104, 100, 82, 83,
	90, 124, 195, 151, 109, 181, 106, 0, 0, 0,
	0, 0, 123, 0, 125, 0, 0, 163, 134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 149, 0, 166, 114, 122, 84, 91, 0, 113,
	140, 154, 158, 0, 0, 0, 101, 0, 156, 144,
	178, 0, 145, 155, 126, 171, 150, 0, 185, 186,
	168, 184, 193, 85, 167, 177, 98, 159, 87, 175,
	165, 132, 118, 119, 86, 0, 153, 105, 110, 103,
	141, 172, 173, 102, 197, 92, 183, 89, 93, 182,
	139, 170, 176, 133, 130, 88, 174, 131, 129, 121,
	108, 115, 147, 128, 148, 116, 136, 135, 137, 0,
	0, 0, 164, 180, 198, 95, 0, 160, 169, 187,
	188, 189, 190, 191, 192, 0, 0, 96, 111, 107,
	146, 138, 94, 117, 161, 120, 127, 152, 196, 143,
	157, 99, 179, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 194,
	104, 100, 82, 83, 90, 124, 195, 151, 109, 181,
	106, 0, 0, 0, 0, 0, 123, 0, 125, 0,
	0, 163, 134, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 149, 0, 166, 114, 122,
	84, 91, 0, 113, 140, 154, 158, 0, 0, 0,
	101, 0, 156, 144, 178, 0, 145, 155, 126, 171,
	150, 0, 185, 186, 168, 184, 193, 85, 167, 177,
	98, 159, 87, 175, 165, 132, 118, 119, 86, 0,
	153, 105, 110, 103, 141, 172, 173, 102, 197, 92,
	183, 89, 93, 182, 139, 170, 176, 133, 130, 88,
	174, 131, 129, 121, 108, 115, 147, 128, 148, 116,
	136, 135, 137, 0, 0, 0, 164, 180, 198, 95,
	0, 160, 169, 187, 188, 189, 190, 191, 192, 0,
	0, 96, 111, 107, 146, 138, 94, 117, 161, 120,
	127, 152, 196, 143, 157, 99, 179, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 194, 104, 100, 82, 83, 90, 124,
	195, 151, 109, 181, 106, 0, 0, 0, 0, 0,
	123, 0, 125, 0, 0, 163, 134, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 149,
	0, 166, 114, 122, 84, 91, 0, 113, 140, 154,
	158, 0, 0, 0, 101, 0, 156, 144, 178, 0,
	145, 155, 126, 171, 150, 0, 185, 186, 168, 184,
	193, 85, 167, 177, 98, 159, 87, 175, 165, 132,
	118, 119, 86, 0, 153, 105, 110, 103, 141, 172,
	173, 102, 197, 92, 183, 89, 93, 182, 139, 170,
	176, 133, 130, 88, 174, 131, 129, 121, 108, 115,
	147, 128, 148, 116, 136, 135, 137, 0, 0, 0,
	164, 180, 198, 95, 0, 160, 169, 187, 188, 189,
	190, 191, 192, 0, 0, 96, 111, 107, 146, 138,
	94, 117, 161, 120, 127, 152, 196, 143, 157, 99,
	179, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 83, 90, 124, 195, 151, 109, 181,
}
var yyPact = [...]int{

	91, -1000, -194, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 905, 957, -1000, -1000, -1000, -1000, -1000, -1000,
	322, 9574, 44, 150, 32, 12541, 149, 1625, 13029, -1000,
	12, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -72, -73,
	-1000, 719, -1000, -1000, -1000, -1000, -1000, 889, 901, 745,
	878, 805, -1000, 7273, 110, 110, 12297, 5988, -1000, -1000,
	299, 13029, 144, 13029, -137, 122, 122, 122, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 148,
	13029, 249, -1000, 13029, 121, 584, 121, 121, 121, 13029,
	-1000, 186, -1000, -1000, -1000, 13029, 583, 842, 3558, 92,
	3558, 3558, -1000, 3558, 3558, -1000, 3558, 18, 3558, -59,
	914, -1000, -1000, -1000, -1000, -16, -1000, 3558, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 491, 852, 8302, 8302, 905, -1000, 719, -1000, -1000,
	-1000, 841, -1000, -1000, 321, 932, -1000, 2603, 184, -1000,
	8302, 2471, 564, -1000, -1000, 564, -1000, -1000, 177, -1000,
	-1000, 9073, 9073, 9073, 9073, 9073, 9073, 9073, 9073, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 564, -1000, 8045, 564, 564, 564, 564,
	564, 564, 564, 564, 8302, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	12053, 11308, 13029, 695, 672, -1000, -1000, 183, 709, 5718,
	-111, -1000, -1000, -1000, 286, 11064, -1000, -1000, -1000, 839,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 582, 13029, -1000,
	2275, -1000, 577, 3558, 134, 576, 306, 575, 13029, 13029,
	3558, 24, 72, 147, 13029, 721, 129, 13029, 865, 768,
	13029, 563, 553, -1000, 5448, -1000, 3558, 3558, -1000, -1000,
	-1000, 3558, 3558, 3558, 13029, 3558, 3558, -1000, -1000, -1000,
	-1000, -1000, 3558, 3558, -1000, 931, 316, -1000, -1000, -1000,
	-1000, 8302, -1000, 755, -1000, -1000, -1000, -1000, -1000, -1000,
	951, 218, 510, 182, 720, -1000, 414, 889, 491, 805,
	10820, 784, -1000, -1000, 13029, -1000, 8302, 8302, 468, -1000,
	11796, -1000, -1000, 4368, 222, 9073, 349, 258, 9073, 9073,
	9073, 9073, 9073, 9073, 9073, 9073, 9073, 9073, 9073, 9073,
	9073, 9073, 9073, 461, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 539, -1000, 719, 622, 622, 198, 198, 198,
	198, 198, 198, 198, 9330, 6759, 491, 571, 374, 8045,
	7273, 7273, 8302, 8302, 7787, 7530, 7273, 875, 253, 374,
	13273, -1000, -1000, 8816, -1000, -1000, -1000, -1000, -1000, 491,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12785, 12785, 7273,
	7273, 7273, 7273, 61, 13029, -1000, 661, 1199, -1000, -1000,
	-1000, 867, 10319, 564, 10576, 61, 703, 11308, 13029, -1000,
	-1000, 11308, 13029, 4098, 5178, 709, -111, 685, -1000, -118,
	-100, 6502, 197, -1000, -1000, -1000, -1000, 3288, 256, 552,
	301, -52, -1000, -1000, -1000, 727, -1000, 727, 727, 727,
	727, -15, -15, -15, -15, -1000, -1000, -1000, -1000, -1000,
	741, 740, -1000, 727, 727, 727, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 738, 738, 738, 730, 730, 744,
	-1000, 13029, 3558, 864, 3558, -1000, 109, -1000, 12785, 12785,
	13029, 13029, 158, 13029, 13029, 706, -1000, 13029, 3558, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 13029, 308, 13029, 13029, 374, 13029,
	-1000, 822, 8302, 8302, 4908, 8302, -1000, -1000, -1000, 852,
	-1000, 875, 908, -1000, 831, 830, 7273, -1000, -1000, 222,
	288, -1000, -1000, 407, -1000, -1000, -1000, -1000, 180, 564,
	-1000, 2132, -1000, -1000, -1000, -1000, 349, 9073, 9073, 9073,
	90, 2132, 2110, 847, 329, 198, 406, 406, 195, 195,
	195, 195, 195, 451, 451, -1000, -1000, -1000, 491, -1000,
	-1000, -1000, 491, 7273, 705, -1000, -1000, 8302, -1000, 491,
	561, 561, 271, 443, 295, 927, 561, 278, 925, 561,
	561, 7273, 392, -1000, 8302, 491, -1000, 175, -1000, 397,
	698, 686, 561, 491, 561, 561, 692, 564, -1000, 13273,
	11308, 11308, 11308, 11308, 11308, -1000, 802, 794, -1000, 788,
	782, 806, 13029, -1000, 567, 10319, 12785, 196, 564, -1000,
	11552, -1000, -1000, 912, 11308, 665, -1000, 665, -1000, 173,
	-1000, -1000, 685, -111, -77, -1000, -1000, -1000, -1000, 374,
	-1000, 469, 682, 3017, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 732, 533, -1000, 856, 232, 237, 500, 854, -1000,
	-1000, -1000, 844, -1000, 264, -67, -1000, -1000, 425, -15,
	-15, -1000, -1000, 197, 838, 197, 197, 197, 466, 466,
	-1000, -1000, -1000, -1000, 409, -1000, -1000, -1000, 394, -1000,
	753, 12785, 3558, -1000, -1000, -1000, -1000, 309, 309, 226,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 52, 743, -1000, -1000, -1000, 23, 22, 125, -1000,
	3558, -1000, 316, -1000, 463, 8302, -1000, -1000, -1000, 819,
	374, 374, 170, -1000, -1000, 13029, -1000, -1000, -1000, -1000,
	680, -1000, -1000, -1000, 3828, 7273, -1000, 90, 2132, 2064,
	-1000, 9073, 9073, -1000, -1000, 561, 7273, 374, -1000, -1000,
	-1000, 171, 461, 171, 9073, 9073, -1000, 9073, 9073, -1000,
	-164, 675, 238, -1000, 8302, 379, -1000, 4908, -1000, 9073,
	9073, -1000, -1000, -1000, -1000, 751, 13273, 564, -1000, 10075,
	12785, 716, -1000, 240, 1199, 737, 750, 766, -1000, -1000,
	-1000, -1000, 789, -1000, 786, -1000, -1000, -1000, -1000, 491,
	677, -1000, 216, -1000, 143, 142, 140, 12785, -1000, 905,
	8302, 665, -1000, -1000, 208, -1000, -1000, -101, -107, -1000,
	-1000, -1000, 3288, -1000, 3288, 12785, 89, -1000, 500, 500,
	-1000, -1000, -1000, 731, 749, 9073, -1000, -1000, -1000, 531,
	197, 197, -1000, 250, -1000, -1000, -1000, 558, -1000, 551,
	674, 545, 13029, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13029,
	-1000, -1000, -1000, -1000, -1000, 12785, -177, 474, 12785, 12785,
	13029, -1000, 308, -1000, 374, -1000, 4638, -1000, 912, 11308,
	-1000, -1000, 491, -1000, 9073, 2132, 2132, -1000, -1000, 491,
	727, 727, -1000, 727, 730, -1000, 727, 3, 727, 2,
	491, 491, 2015, 1977, 1806, 1602, 564, -159, -1000, 374,
	8302, -1000, 1400, 898, -1000, 848, 587, 637, -1000, -1000,
	7016, 491, 537, 168, 530, -1000, 905, 13273, 8302, -1000,
	-1000, 8302, 728, -1000, 8302, -1000, -1000, -1000, 867, 12785,
	6245, 564, 564, 564, 530, 889, 374, -1000, -1000, -1000,
	-1000, 3017, -1000, 525, -1000, 727, -1000, -1000, -1000, 12785,
	-48, 949, 2132, -1000, -1000, -1000, -1000, -1000, -15, 460,
	-15, 376, -1000, 354, 3558, -1000, -1000, -1000, -1000, 860,
	-1000, 4638, -1000, -1000, 723, -1000, -1000, -1000, 909, 673,
	-1000, 2132, -1000, -1000, 115, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 9073, 9073, 9073, 9073, 9073, 491, 453,
	374, 9073, 9073, 853, -1000, 564, -1000, -1000, 711, 12785,
	12785, -1000, 12785, 889, -1000, 374, 374, 12785, 374, 13029,
	-1000, -1000, 374, 564, 564, 12785, 12785, 12785, 9831, -1000,
	179, 12785, -1000, 523, -1000, 215, -1000, -119, 197, -1000,
	197, 519, 511, -1000, 564, 648, -1000, 239, 12785, 907,
	891, -1000, -1000, 397, 397, 397, 397, 10, -1000, -1000,
	397, 397, 935, -1000, 564, -1000, 719, 162, -1000, -1000,
	-1000, 518, -1000, 11308, 13273, 514, 514, 514, 196, 179,
	-1000, 472, 235, 445, -1000, 82, 12785, 315, 846, -1000,
	843, -1000, -1000, -1000, -1000, -1000, 51, 4638, 3288, 490,
	41, 8302, 8302, -1000, -1000, -1000, -1000, 491, 49, -186,
	-1000, -1000, 13273, 637, 491, 12785, -1000, 1106, 491, -1000,
	-1000, -1000, -1000, -1000, -1000, 340, -1000, -1000, 13029, -1000,
	-1000, 429, -1000, -1000, 484, -1000, 12785, -1000, -1000, 743,
	-1000, 761, 374, 621, -1000, 816, -174, -190, 620, -1000,
	-1000, -1000, -1000, -1000, 712, -1000, -1000, 51, 829, -177,
	599, -1000, 885, 883, 8302, -1000, 815, -1000, 12785, -1000,
	47, -1000, 761, -1000, 8302, 374, -183, 478, 45, -1000,
	374, -188, 739, 564, -191, 722, -1000, 920, 8559, -1000,
	-1000, 922, 192, 192, 397, 491, -1000, -1000, -1000, 96,
	455, -1000, -1000, -1000, -1000, -1000, -1000,
}
var yyPgo = [...]int{

	0, 1204, 33, 716, 1203, 1201, 1198, 1196, 1194, 1193,
	1192, 1191, 1189, 1179, 1178, 1175, 1174, 1173, 1172, 1171,
	1170, 1167, 1162, 1161, 1160, 1157, 128, 1150, 1149, 1148,
	93, 1147, 75, 1145, 1144, 48, 161, 63, 43, 1146,
	1141, 50, 19, 56, 1139, 1138, 1136, 24, 1135, 45,
	1134, 1133, 77, 1128, 1127, 57, 1124, 1123, 1893, 1122,
	66, 1121, 13, 29, 1119, 1110, 1108, 1107, 73, 986,
	1106, 1105, 17, 1104, 1102, 87, 1101, 61, 8, 16,
	15, 27, 1100, 69, 7, 1099, 59, 1097, 1093, 1092,
	1089, 30, 1088, 62, 1087, 21, 60, 1086, 1084, 3,
	1082, 12, 78, 40, 20, 5, 79, 71, 1077, 22,
	65, 54, 1074, 1072, 398, 1071, 1070, 51, 1069, 1067,
	31, 169, 470, 1066, 1059, 1057, 1056, 42, 0, 534,
	248, 76, 1054, 1053, 1052, 1567, 46, 55, 25, 26,
	44, 994, 47, 1051, 1047, 41, 1044, 1041, 1039, 1038,
	1037, 1035, 1033, 420, 1029, 1026, 1025, 58, 23, 1024,
	1023, 70, 28, 1022, 1019, 1015, 53, 64, 1013, 1009,
	49, 37, 1008, 992, 990, 989, 987, 38, 10, 984,
	18, 982, 11, 980, 35, 979, 9, 978, 14, 977,
	6, 974, 4, 52, 1, 972, 2, 970, 964, 343,
	599, 80, 963, 103,
}
var yyR1 = [...]int{

	0, 197, 198, 198, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 6, 3, 4,
	4, 5, 5, 7, 7, 29, 29, 8, 9, 9,
	9, 9, 201, 201, 52, 52, 53, 53, 102, 102,
	10, 10, 10, 10, 107, 107, 111, 111, 111, 112,
	112, 112, 112, 143, 143, 11, 11, 11, 11, 11,
	11, 11, 192, 192, 191, 190, 190, 189, 189, 188,
	17, 173, 175, 175, 174, 174, 174, 174, 167, 146,
	146, 146, 146, 149, 149, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 148, 148, 148, 148, 148, 150,
	150, 150, 150, 150, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 152,
	152, 152, 152, 152, 152, 152, 152, 166, 166, 153,
	153, 161, 161, 162, 162, 162, 159, 159, 160, 160,
	163, 163, 163, 155, 155, 156, 156, 164, 164, 157,
	157, 157, 158, 158, 158, 165, 165, 165, 165, 165,
	154, 154, 168, 168, 183, 183, 182, 182, 182, 172,
	172, 179, 179, 179, 179, 179, 170, 170, 171, 171,
	181, 181, 180, 169, 169, 184, 184, 184, 184, 195,
	196, 194, 194, 194, 194, 194, 176, 176, 176, 177,
	177, 177, 178, 178, 178, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 187,
	185, 185, 186, 186, 13, 18, 18, 14, 14, 14,
	14, 14, 15, 15, 19, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 118, 118, 116,
	116, 119, 119, 117, 117, 117, 120, 120, 120, 144,
	144, 144, 21, 21, 23, 23, 24, 25, 22, 22,
	22, 22, 22, 22, 22, 16, 202, 26, 27, 27,
	28, 28, 28, 32, 32, 32, 30, 30, 31, 31,
	37, 37, 36, 36, 38, 38, 38, 38, 132, 132,
	132, 131, 131, 40, 40, 41, 41, 42, 42, 43,
	43, 43, 43, 43, 61, 61, 46, 46, 45, 45,
	47, 48, 48, 48, 101, 101, 103, 103, 44, 44,
	44, 44, 49, 49, 50, 50, 51, 51, 139, 139,
	138, 138, 138, 137, 137, 54, 54, 54, 56, 55,
	55, 55, 55, 57, 57, 59, 59, 58, 58, 60,
	62, 62, 62, 62, 63, 63, 39, 39, 39, 39,
	39, 39, 39, 115, 115, 65, 65, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 76, 76, 76,
	76, 76, 76, 66, 66, 66, 66, 66, 66, 66,
	35, 35, 77, 77, 77, 83, 78, 78, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	73, 73, 73, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 72, 72, 72, 72, 72,
	72, 72, 203, 203, 75, 74, 74, 74, 74, 74,
	74, 33, 33, 33, 33, 33, 142, 142, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 87, 87, 34, 34, 85, 85, 86, 88, 88,
	84, 84, 84, 68, 68, 68, 68, 68, 68, 68,
	68, 70, 70, 70, 89, 89, 90, 90, 91, 91,
	92, 92, 93, 94, 94, 94, 95, 95, 95, 95,
	96, 96, 96, 97, 97, 98, 98, 99, 99, 99,
	67, 67, 67, 67, 67, 67, 100, 100, 100, 100,
	104, 104, 79, 79, 81, 81, 80, 82, 105, 105,
	109, 106, 106, 110, 110, 110, 110, 108, 108, 108,
	134, 134, 134, 113, 113, 121, 121, 122, 122, 114,
	114, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 124, 124, 124, 125, 125, 126, 126, 126, 133,
	133, 129, 129, 130, 130, 135, 135, 136, 136, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 127, 127, 127, 127, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 199, 200, 140, 141, 141, 141,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 6, 7, 5, 11, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 0, 4,
	3, 4, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 2, 8, 4, 6,
	5, 5, 0, 2, 1, 0, 2, 1, 3, 3,
	4, 4, 2, 4, 1, 3, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 1, 2, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 2, 2, 0, 2, 1, 2, 1,
	0, 2, 5, 4, 1, 2, 2, 3, 2, 0,
	1, 2, 3, 3, 2, 2, 1, 1, 0, 1,
	1, 3, 2, 3, 1, 10, 11, 11, 12, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 6, 7, 7, 7, 7,
	4, 5, 7, 5, 5, 5, 12, 7, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 3, 8, 8, 3, 3, 5, 4, 6, 5,
	4, 4, 3, 2, 3, 4, 4, 3, 4, 4,
	4, 4, 4, 4, 3, 3, 2, 3, 3, 2,
	3, 4, 3, 7, 5, 4, 2, 4, 2, 2,
	2, 2, 3, 3, 5, 2, 3, 1, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	1, 1, 2, 1, 1, 2, 1, 1, 2, 2,
	2, 2, 2, 3, 3, 2, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 0, 1,
	0, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 2, 1, 3, 1, 1, 1,
	3, 1, 3, 6, 3, 7, 0, 1, 1, 3,
	3, 1, 4, 4, 1, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 5, 5, 5, 0, 2, 1, 3, 3, 2,
	3, 1, 2, 0, 3, 1, 1, 3, 3, 4,
	4, 5, 3, 4, 5, 6, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	4, 5, 6, 4, 4, 6, 6, 6, 8, 8,
	8, 8, 9, 7, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 2, 3,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 0, 2, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	0, 2, 4, 0, 2, 1, 3, 2, 3, 2,
	2, 1, 3, 5, 4, 6, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 0, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -197, -1, -2, -6, -7, -8, -9, -10, -11,
	-12, -13, -14, -15, -19, -20, -21, -23, -24, -25,
	-22, -16, -3, -4, 6, 7, -29, 9, 10, 34,
	-17, 120, 121, 123, 122, 155, 124, 148, 54, 168,
	169, 171, 172, 29, 149, 150, 153, 154, 35, 36,
	126, -199, 8, 258, 58, -198, 275, -91, 15, -28,
	5, -26, -202, -26, -26, -26, -26, -26, -173, -175,
	58, 94, -126, 131, 76, 250, 127, 128, 135, -129,
	61, -128, 23, 268, 141, 168, 179, 173, 200, 192,
	269, 142, 190, 193, 237, 220, 232, 70, 171, 246,
	22, 151, 188, 184, 21, 182, 31, 234, 205, 273,
	183, 233, 126, 144, 139, 206, 210, 238, 177, 178,
	240, 204, 140, 37, 270, 39, 159, 241, 208, 203,
	199, 202, 176, 198, 43, 212, 211, 213, 236, 195,
	145, 185, 18, 244, 154, 157, 235, 207, 209, 136,
	161, 272, 242, 181, 146, 158, 153, 245, 147, 172,
	222, 239, 248, 42, 217, 175, 138, 169, 165, 223,
	196, 160, 186, 187, 201, 174, 197, 170, 155, 247,
	218, 274, 194, 191, 166, 163, 164, 224, 225, 226,
	227, 228, 229, 167, 20, 271, 243, 189, 219, -114,
	131, 227, 133, 128, 128, 130, 131, 250, 127, 128,
	-58, -135, 61, -128, 131, 128, 113, 193, 237, 120,
	221, 222, 234, 130, 37, 235, 161, -144, 128, -116,
	220, 224, 225, 226, 229, 227, 167, 61, 239, 238,
	230, -135, 170, -140, -140, -140, -140, -140, 223, 223,
	-140, -2, -95, 17, 16, -5, -3, -199, 6, 24,
	25, -32, 44, 45, -27, -38, 104, -39, -135, -64,
	78, -69, 33, 61, -128, 27, -68, -65, -84, -82,
	-83, 113, 114, 115, 102, 103, 110, 79, 116, -73,
	-71, -72, -74, 63, 62, 71, 64, 65, 66, 67,
	72, 73, 74, -129, -80, -199, 48, 49, 259, 260,
	261, 262, 267, 263, 81, 38, 249, 257, 256, 255,
	253, 254, 251, 252, 265, 266, 134, 250, 108, 258,
	-114, -114, 11, -52, -53, -58, -60, -135, -106, -143,
	170, -110, 239, 238, -130, -108, -129, -127, 237, 193,
	236, 125, 77, 26, 28, 215, 80, 113, 16, 81,
	112, 259, 120, 52, 251, 252, 249, 261, 262, 250,
	221, 33, 10, 29, 149, 25, 106, 122, 84, 85,
	152, 27, 150, 74, 19, 55, 11, 13, 14, 134,
	133, 96, 130, 50, 8, 116, 30, 93, 46, 32,
	48, 94, 17, 253, 254, 35, 267, 156, 108, 53,
	40, 78, 72, 75, 56, 76, 15, 51, 95, 123,
	258, 49, 127, 6, 264, 34, 148, 47, 128, 83,
	265, 266, 132, 162, 73, 5, 135, 36, 9, 54,
	57, 255, 256, 257, 38, 82, 12, -174, 94, -167,
	61, -58, 130, -58, 258, -122, 134, -122, -122, 128,
	-58, 120, 122, 125, 56, -18, -58, -121, 134, 61,
	-121, -121, -121, -58, 117, -58, 61, 34, -141, -199,
	-130, 250, 61, 161, 128, 162, 131, -141, -141, -141,
	-141, -141, 165, 166, -141, -119, -118, 232, 233, 223,
	231, 12, 223, 164, -141, -140, -140, -200, 60, -96,
	19, 35, -39, -135, -92, -93, -39, -91, -2, -26,
	40, -30, 25, 69, 11, -132, 77, 76, 93, -131,
	26, -129, 63, 117, -39, -66, 96, 78, 94, 95,
	80, 99, 98, 109, 102, 103, 104, 105, 106, 107,
	108, 100, 101, 112, 86, 87, 88, 89, 90, 91,
	92, -115, -199, -83, -199, 118, 119, -69, -69, -69,
	-69, -69, -69, -69, -69, -199, -2, -78, -39, -199,
	-199, -199, -199, -199, -199, -199, -199, -199, -87, -39,
	-199, -203, -75, -199, -203, -75, -203, -75, -203, -199,
	-203, -75, -203, -75, -203, -203, -75, -199, -199, -199,
	-199, -199, -199, -59, 30, -58, -41, -42, -43, -44,
	-61, -83, -199, 61, -58, -58, -52, -201, 59, 11,
	57, -201, 59, 117, 59, -106, 170, -107, -111, 240,
	242, 86, -134, -129, 63, 33, 34, 60, 59, -58,
	-146, -149, -151, -150, -152, -147, -148, 190, 191, 113,
	194, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 34, 151, 186, 187, 188, 189, 206, 207, 208,
	209, 210, 211, 212, 213, 173, 192, 269, 174, 175,
	176, 177, 178, 179, 181, 182, 183, 184, 185, 61,
	-141, 131, 61, 78, 61, -58, -58, -141, 163, 163,
	128, 128, -58, 59, 132, -52, 27, 56, -58, 61,
	61, -136, -135, -127, -141, -141, -141, -141, -141, -58,
	-141, -141, -141, -141, 11, -117, 11, 96, -39, 56,
	9, 96, 59, 18, 117, 59, -94, 28, 29, -95,
	-200, -32, -70, -129, 64, 67, -31, 47, -58, -39,
	-39, -76, 72, 78, 73, 74, -131, 104, -136, -130,
	-127, -69, -77, -80, -83, 68, 96, 94, 95, 80,
	-69, -69, -69, -69, -69, -69, -69, -69, -69, -69,
	-69, -69, -69, -69, -69, -142, 61, 63, 61, -68,
	-68, -129, -37, 25, -36, -38, -200, 59, -200, -2,
	-36, -36, -39, -39, -84, 63, -36, -84, 63, -36,
	-36, -30, -85, -86, 82, -84, -129, -135, -200, -69,
	-129, -129, -36, -37, -36, -36, -102, 157, -58, 34,
	59, -54, -56, -55, -57, 46, 50, 52, 47, 48,
	49, 53, -139, 26, -41, -199, -199, -138, 157, -137,
	26, -135, 63, -102, 57, -41, -58, -41, -60, -135,
	104, -110, -107, 59, 241, 243, 244, 56, 75, -39,
	-158, 112, -176, -177, -178, -130, 63, 64, -167, -168,
	-169, -179, 143, -184, 136, 138, 135, -170, 144, 130,
	32, 60, -163, 72, 78, -159, 218, -153, 58, -153,
	-153, -153, -153, -157, 193, -157, -157, -157, 58, 58,
	-153, -153, -153, -161, 58, -161, -161, -162, 58, -162,
	-133, 57, -58, -141, 27, -141, -123, 125, 122, 123,
	-187, 121, 215, 193, 70, 33, 15, 259, 157, 274,
	61, 158, -129, -129, -58, -58, 125, 122, -58, -58,
	-58, -141, -58, -120, 94, 12, -135, -135, -58, 42,
	-39, -39, -136, -93, -96, -113, 19, 11, 38, 38,
	-36, 72, 73, 74, 117, -199, -77, -69, -69, -69,
	-35, 152, 77, -200, -200, -36, 59, -39, -200, -200,
	-200, 59, 57, 26, 11, 11, -200, 11, 11, -200,
	-200, -36, -88, -86, 84, -39, -200, 117, -200, 59,
	59, -200, -200, -200, -200, -67, 34, 38, -2, -199,
	-199, -105, -109, -84, -42, -43, -43, -42, -43, 46,
	46, 46, 51, 46, 51, 46, -55, -135, -200, -46,
	-45, -47, -129, -62, 54, 133, 55, -199, -137, -63,
	12, -41, -63, -63, 117, -111, -112, 245, 242, 248,
	61, 63, 59, -178, 86, 58, 61, 32, -170, -170,
	-171, 61, -171, 32, -155, 33, 72, -160, 219, 64,
	-157, -157, -158, 34, -158, -158, -158, -166, 63, -166,
	64, 64, 56, -129, -141, -140, -193, 137, 143, 144,
	139, 61, 130, 32, 136, 138, 157, 135, -193, -124,
	-125, 132, 26, 130, 32, 157, -192, 57, 163, 163,
	132, -141, -117, 63, -39, 43, 117, -58, -40, 11,
	104, -130, -37, -35, 77, -69, -69, -200, -38, -145,
	113, 190, 151, 188, 184, 204, 195, 217, 186, 218,
	-142, -145, -69, -69, -69, -69, 268, -91, 85, -39,
	83, -130, -69, -69, -104, 56, -105, -79, -81, -80,
	-199, -2, -100, -129, -103, -129, -63, 59, 86, -50,
	-49, 56, 57, -51, 56, -49, 46, 46, -200, 59,
	97, 130, 130, 130, -103, -91, -39, -63, 242, 246,
	247, -177, -178, -181, -180, -129, -184, -171, -171, 58,
	-156, 56, -69, 60, -158, -158, 61, 113, 60, 59,
	60, 59, 60, 59, -58, -140, -140, -58, -140, -129,
	-190, 271, -191, 61, -129, -129, -58, -120, -63, -41,
	-200, -69, -200, -153, -153, -153, -162, -153, 178, -153,
	178, -200, -200, 19, 19, 19, 19, -199, -34, 264,
	-39, 59, 59, 31, -104, 59, -200, -200, -200, 59,
	117, -200, 59, -91, -109, -39, -39, 58, -39, -139,
	-47, -48, -39, 128, 129, -199, -199, -199, -200, -95,
	60, 59, -153, -101, -129, -164, 215, 9, -157, 63,
	-157, 64, 64, -141, 30, -189, -188, -130, 58, -89,
	13, -157, 61, -69, -69, -69, -69, -69, -200, 63,
	-69, -69, 32, -81, 38, -2, -199, -129, -129, -129,
	-95, -101, -135, -199, -199, -101, -101, -101, -138, -183,
	-182, 57, 140, 70, -180, 60, 59, -165, 136, 32,
	135, -72, -158, -158, 60, 60, -199, 59, 86, -101,
	-90, 14, 16, -200, -200, -200, -200, -33, 96, 271,
	-200, -200, 9, -79, -2, 117, 60, -42, -84, -200,
	-200, -200, -62, -182, 61, -172, 86, 63, 146, -129,
	-154, 70, 32, 32, -185, -186, 157, -188, -178, 60,
	-97, 162, -39, -78, -200, 269, 53, 272, -105, -200,
	-129, -200, -200, 64, -58, 63, -200, 59, -129, -192,
	-98, -99, 56, 23, 22, 43, 270, 273, 58, -186,
	38, -190, 59, 20, 21, -39, 43, -101, 159, -99,
	-39, 271, 60, 160, 272, -195, -196, 56, -199, 273,
	-196, 56, 10, 9, -69, 156, -194, 147, 142, 145,
	34, -194, -200, -200, 141, 33, 72,
}
var yyDef = [...]int{

	23, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 568, 0, 316, 316, 316, 316, 316, 316,
	0, 646, 629, 0, 0, 0, 0, -2, 303, 304,
	0, 306, 307, 875, 875, 875, 875, 875, 0, 0,
	875, 0, 35, 36, 873, 1, 3, 576, 0, 0,
	320, 323, 318, 0, 629, 629, 0, 0, 65, 66,
	0, 0, 0, 858, 0, 627, 627, 627, 647, 648,
	651, 652, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 796, 797, 798, 799, 800, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 811, 812,
	813, 814, 815, 816, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 0,
	0, 0, 630, 0, 625, 0, 625, 625, 625, 0,
	253, 397, 655, 656, 858, 0, 0, 0, 876, 0,
	876, 876, 266, 876, 876, 269, 876, 0, 876, 0,
	276, 278, 279, 280, 281, 0, 285, 876, 300, 301,
	290, 302, 305, 308, 309, 310, 311, 312, 875, 875,
	315, 29, 580, 0, 0, 568, 31, 0, 316, 321,
	322, 326, 324, 325, 317, 0, 334, 338, 0, 406,
	0, 411, 413, -2, -2, 0, 448, 449, 450, 451,
	452, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	477, 478, 479, 553, 554, 555, 556, 557, 558, 559,
	560, 415, 416, 550, 607, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 0, 512, 512, 512, 512,
	512, 512, 512, 512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 44, 46, 397, 50, 0,
	850, 611, -2, -2, 0, 0, 653, 654, -2, 766,
	-2, 659, 660, 661, 662, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 0, 0, 84,
	0, 82, 0, 876, 0, 0, 0, 0, 0, 0,
	876, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 252, 0, 254, 876, 876, 257, 877,
	878, 876, 876, 876, 0, 876, 876, 264, 265, 267,
	268, 270, 876, 876, 272, 0, 293, 291, 292, 287,
	288, 0, 282, 283, 286, 313, 314, 30, 874, 24,
	0, 0, 577, 0, 569, 570, 573, 576, 29, 323,
	0, 328, 327, 319, 0, 335, 0, 0, 0, 339,
	0, 341, 342, 0, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 433, 434, 435, 436, 437, 438,
	439, 412, 0, 426, 0, 0, 0, 468, 469, 470,
	471, 472, 473, 474, 0, 330, 29, 0, 446, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 542,
	0, 496, 504, 0, 497, 505, 498, 506, 499, 0,
	500, 507, 501, 508, 502, 503, 509, 0, 0, 0,
	330, 0, 0, 48, 0, 396, 0, 345, 347, 348,
	349, -2, 0, 655, 380, -2, 0, 0, 0, 42,
	43, 0, 0, 0, 0, 51, 850, 53, 54, 0,
	0, 0, 162, 620, 621, 622, 618, 206, 0, 0,
	150, 146, 90, 91, 92, 139, 94, 139, 139, 139,
	139, 159, 159, 159, 159, 122, 123, 124, 125, 126,
	0, 0, 109, 139, 139, 139, 113, 129, 130, 131,
	132, 133, 134, 135, 136, 95, 96, 97, 98, 99,
	100, 101, 102, 103, 141, 141, 141, 143, 143, 649,
	68, 0, 876, 0, 876, 80, 0, 220, 0, 0,
	0, 0, 0, 0, 0, 247, 626, 0, 876, 250,
	251, 398, 657, 658, 255, 256, 258, 259, 260, 261,
	262, 263, 271, 275, 0, 296, 0, 0, 277, 0,
	581, 0, 0, 0, 0, 0, 572, 574, 575, 580,
	32, 326, 0, 561, 0, 0, 0, 329, 27, 407,
	408, 410, 427, 0, 429, 431, 340, 336, 0, 551,
	-2, 417, 418, 442, 443, 444, 0, 0, 0, 0,
	440, 422, 0, 453, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 467, 526, 527, 0, 465,
	466, 475, 0, 0, 331, 332, 445, 0, 606, 29,
	0, 0, 0, 0, 450, 553, 0, 450, 553, 0,
	0, 0, 548, 545, 0, 0, 550, 0, 513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	0, 0, 0, 0, 0, 385, 0, 0, 388, 0,
	0, 0, 0, 379, 0, 0, 356, 400, 818, 381,
	0, 383, 384, 404, 0, 404, 45, 404, 47, 0,
	399, 612, 52, 0, 0, 57, 58, 613, 614, 615,
	616, 0, 81, 207, 209, 212, 213, 214, 85, 86,
	87, 0, 0, 194, 0, 0, 188, 188, 0, 186,
	187, 83, 153, 151, 0, 148, 147, 93, 0, 159,
	159, 116, 117, 162, 0, 162, 162, 162, 0, 0,
	110, 111, 112, 104, 0, 105, 106, 107, 0, 108,
	0, 0, 876, 70, 628, 71, 875, 0, 0, 641,
	221, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 0, 72, 223, 225, 224, 0, 0, 0, 245,
	876, 249, 293, 274, 0, 0, 294, 295, 284, 0,
	578, 579, 0, 571, 25, 0, 623, 624, 562, 563,
	343, 428, 430, 432, 0, 330, 419, 440, 423, 0,
	420, 0, 0, 414, 480, 0, 0, 447, -2, 483,
	484, 0, 0, 0, 0, 0, 519, 0, 0, 520,
	0, 568, 0, 546, 0, 0, 495, 0, 514, 0,
	0, 515, 516, 517, 518, 600, 0, 0, -2, 0,
	0, 404, 608, 0, 346, 374, 376, 0, 371, 386,
	387, 389, 0, 391, 0, 393, 394, 350, 352, 0,
	357, 358, 0, 354, 0, 0, 0, 0, 382, 568,
	0, 404, 40, 41, 0, 55, 56, 0, 0, 62,
	163, 164, 0, 210, 0, 0, 0, 181, 188, 188,
	184, 189, 185, 0, 155, 0, 152, 89, 149, 0,
	162, 162, 118, 0, 119, 120, 121, 0, 137, 0,
	0, 0, 0, 650, 69, 215, 875, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 875, 0,
	875, 642, 643, 644, 645, 0, 75, 0, 0, 0,
	0, 248, 296, 297, 298, 582, 0, 26, 404, 0,
	337, 552, 0, 421, 0, 441, 424, 481, 333, 0,
	139, 139, 531, 139, 143, 534, 139, 536, 139, 539,
	0, 0, 0, 0, 0, 0, 0, 543, 494, 549,
	0, 551, 0, 0, 33, 0, 600, 590, 602, 604,
	0, 29, 0, 596, 0, 366, 568, 0, 0, 368,
	375, 0, 0, 369, 0, 370, 390, 392, 378, 0,
	0, 0, 0, 0, 0, 576, 405, 39, 59, 60,
	61, 208, 211, 0, 190, 139, 193, 182, 183, 0,
	157, 0, 154, 140, 114, 115, 160, 161, 159, 0,
	159, 0, 144, 0, 876, 216, 217, 218, 219, 0,
	222, 0, 73, 74, 0, 227, 246, 273, 564, 344,
	482, 425, 485, 528, 159, 532, 533, 535, 537, 538,
	540, 487, 486, 0, 0, 0, 0, 0, 0, 0,
	547, 0, 0, 0, 34, 0, 605, -2, 0, 0,
	0, 49, 0, 576, 609, 610, 372, 0, 377, 0,
	359, 360, 361, 0, 0, 0, 0, 0, 380, 38,
	173, 0, 192, 0, 364, 165, 158, 0, 162, 138,
	162, 0, 0, 67, 0, 76, 77, 0, 0, 566,
	0, 529, 530, 0, 0, 0, 0, 521, 493, 544,
	0, 0, 0, 603, 0, -2, 0, 598, 597, 367,
	37, 0, 353, 0, 0, 0, 0, 0, 400, 172,
	174, 0, 179, 0, 191, 0, 0, 170, 0, 167,
	169, 156, 127, 128, 142, 145, 0, 0, 0, 0,
	583, 0, 0, 488, 490, 489, 491, 0, 0, 0,
	510, 511, 0, 593, 29, 0, 373, 0, 0, 401,
	402, 403, 355, 175, 176, 0, 180, 178, 0, 365,
	88, 0, 166, 168, 0, 240, 0, 78, 79, 72,
	28, 0, 567, 565, 492, 0, 0, 0, 601, -2,
	599, 362, 363, 177, 0, 171, 239, 0, 0, 75,
	584, 585, 0, 0, 0, 522, 0, 525, 0, 241,
	0, 226, 0, 587, 0, 589, 523, 0, 0, 586,
	588, 0, 195, 0, 0, 196, 197, 0, 0, 524,
	198, 0, 0, 0, 0, 0, 199, 201, 202, 0,
	0, 200, 242, 243, 203, 204, 205,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 79, 3, 3, 3, 107, 99, 3,
	58, 60, 104, 102, 59, 103, 117, 105, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 275,
	87, 86, 88, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 109, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 98, 3, 110,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 80, 81, 82, 83, 84, 85,
	89, 90, 91, 92, 93, 94, 95, 96, 97, 100,
	101, 106, 108, 111, 112, 113, 114, 115, 116, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:333
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:338
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:339
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:343
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:365
		{
			setParseTree(yylex, nil)
		}
	case 24:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:371
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 25:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:379
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 26:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:383
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 27:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:389
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 28:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:396
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr), Trigger: yyDollar[11].triggers}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:402
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:406
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:412
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:416
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 33:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:423
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:435
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:447
		{
			yyVAL.str = InsertStr
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:451
		{
			yyVAL.str = ReplaceStr
		}
	case 37:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:457
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 38:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:463
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:467
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:471
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:475
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:480
		{
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:481
		{
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:485
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:489
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:495
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:499
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:504
		{
			yyVAL.partitions = nil
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:508
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:514
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:518
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 52:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:522
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:526
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:532
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:536
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:542
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:546
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:550
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:556
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:560
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:564
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:568
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:574
		{
			yyVAL.str = SessionStr
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:578
		{
			yyVAL.str = GlobalStr
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:584
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:589
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:595
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:600
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 69:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:604
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 70:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:608
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 71:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:612
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:617
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:621
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:632
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:637
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:643
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:648
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:654
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:660
		{
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:667
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:674
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:678
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:684
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:689
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:693
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:697
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:703
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:714
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:725
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:730
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:744
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:764
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:768
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:774
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:780
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:792
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:806
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:828
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:832
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:836
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:891
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:903
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:907
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:911
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:915
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:925
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:930
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:935
		{
			yyVAL.sqlVal = nil
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:939
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:944
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:948
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:956
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:960
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:966
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:974
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:978
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:983
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:987
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:993
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:997
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1001
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1006
		{
			yyVAL.optVal = nil
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1010
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1015
		{
			yyVAL.optVal = nil
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1024
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1028
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1033
		{
			yyVAL.str = ""
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1037
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1041
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1046
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1050
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1054
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1059
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1063
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
			yyVAL.colKeyOpt = colKey
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1075
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1080
		{
			yyVAL.sqlVal = nil
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1090
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1094
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1100
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1104
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1114
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1119
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1125
		{
			yyVAL.str = ""
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1135
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1139
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1147
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1151
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1157
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1161
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1166
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1170
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1180
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1192
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1196
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 195:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1203
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 196:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1207
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 197:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1211
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 198:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1215
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1227
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1233
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1237
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1241
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1245
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1249
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1254
		{
			yyVAL.str = ""
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1258
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1262
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1270
		{
			yyVAL.str = yyDollar[1].str
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1274
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1284
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1288
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1292
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 215:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1298
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1302
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 217:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1306
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 218:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1310
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 219:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1315
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1320
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1324
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 222:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1328
		{
			yyVAL.statement = &DDL{Action: CreateVindexStr, VindexSpec: &VindexSpec{
				Name:   yyDollar[5].colIdent,
				Type:   yyDollar[6].colIdent,
				Params: yyDollar[7].vindexParams,
			}}
		}
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1336
		{
			yyVAL.statement = &DDL{Action: DropVindexStr, VindexSpec: &VindexSpec{
				Name: yyDollar[5].colIdent,
			}}
		}
	case 224:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1342
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 225:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1346
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 226:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1350
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 227:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1363
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 239:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1388
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1394
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1398
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 242:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1404
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 243:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1408
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 246:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1424
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1432
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 248:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1440
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1445
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1453
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1457
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1463
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1467
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1472
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1478
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1483
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1487
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1491
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1496
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 260:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1500
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1504
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1508
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1512
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1516
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1520
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1524
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1532
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1536
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1540
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1544
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1548
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1552
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1557
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1567
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1571
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1575
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1581
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1585
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1589
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1593
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1597
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1601
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1605
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1609
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1619
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = ""
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = "full "
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = ""
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1669
		{
			yyVAL.showFilter = nil
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1673
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1677
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = ""
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = SessionStr
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = GlobalStr
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1697
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.statement = &Begin{}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1711
		{
			yyVAL.statement = &Begin{}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.statement = &Commit{}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.statement = &Rollback{}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1729
		{
			yyVAL.statement = &OtherRead{}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1733
		{
			yyVAL.statement = &OtherRead{}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1737
		{
			yyVAL.statement = &OtherRead{}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1741
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1749
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1753
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1759
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1763
		{
			setAllowComments(yylex, true)
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1767
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1773
		{
			yyVAL.bytes2 = nil
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1777
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = UnionStr
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = UnionAllStr
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = UnionDistinctStr
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = ""
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = SQLCacheStr
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = ""
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = DistinctStr
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = ""
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = StraightJoinHint
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1827
		{
			yyVAL.selectExprs = nil
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1841
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1851
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1855
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1859
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1864
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1872
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1884
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1888
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1898
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1912
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1922
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 353:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1926
		{
			yyVAL.tableExpr = &TableValuedFunction{Name: NewColIdent(string(yyDollar[1].bytes)), Args: yyDollar[3].tableValuedFunctionArguments, As: yyDollar[6].tableIdent}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1932
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 355:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1936
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1941
		{
			yyVAL.tableValuedFunctionArguments = nil
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			yyVAL.tableValuedFunctionArguments = yyDollar[1].tableValuedFunctionArguments
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			yyVAL.tableValuedFunctionArguments = TableValuedFunctionArguments{yyDollar[1].tableValuedFunctionArgument}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1955
		{
			yyVAL.tableValuedFunctionArguments = append(yyVAL.tableValuedFunctionArguments, yyDollar[3].tableValuedFunctionArgument)
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1961
		{
			yyVAL.tableValuedFunctionArgument = &TableValuedFunctionArgument{Name: yyDollar[1].colIdent, Value: yyDollar[3].tableValuedFunctionArgumentValue}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.tableValuedFunctionArgumentValue = &ExprTableValuedFunctionArgumentValue{Expr: yyDollar[1].expr}
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1971
		{
			yyVAL.tableValuedFunctionArgumentValue = &TableDescriptorTableValuedFunctionArgumentValue{Table: yyDollar[3].tableExpr}
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1975
		{
			yyVAL.tableValuedFunctionArgumentValue = &FieldDescriptorTableValuedFunctionArgumentValue{Field: yyDollar[3].colName}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1995
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2008
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2012
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2016
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2020
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2028
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2032
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2038
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2040
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2043
		{
			yyVAL.empty = struct{}{}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.empty = struct{}{}
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2048
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.str = JoinStr
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2073
		{
			yyVAL.str = JoinStr
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2077
		{
			yyVAL.str = JoinStr
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.str = StraightJoinStr
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2089
		{
			yyVAL.str = LeftJoinStr
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2093
		{
			yyVAL.str = LeftJoinStr
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = RightJoinStr
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = RightJoinStr
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2107
		{
			yyVAL.str = NaturalJoinStr
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2121
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2131
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2135
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2141
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2146
		{
			yyVAL.indexHints = nil
		}
	case 401:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2150
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 402:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2154
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2158
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2163
		{
			yyVAL.expr = nil
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2167
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2177
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2181
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2185
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2189
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2197
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2203
		{
			yyVAL.str = ""
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2207
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2223
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2227
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2231
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2235
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2239
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2243
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2247
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2251
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 425:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2255
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2259
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2265
		{
			yyVAL.str = IsNullStr
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2269
		{
			yyVAL.str = IsNotNullStr
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.str = IsTrueStr
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = IsNotTrueStr
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.str = IsFalseStr
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2285
		{
			yyVAL.str = IsNotFalseStr
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.str = EqualStr
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2295
		{
			yyVAL.str = LessThanStr
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.str = GreaterThanStr
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2303
		{
			yyVAL.str = LessEqualStr
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2307
		{
			yyVAL.str = GreaterEqualStr
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2311
		{
			yyVAL.str = NotEqualStr
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2320
		{
			yyVAL.expr = nil
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2330
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2334
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2338
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2344
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2350
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2354
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2360
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2364
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2368
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2372
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2380
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2384
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2388
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2392
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2396
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2400
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2404
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2408
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2412
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2416
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2420
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2424
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2428
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2432
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2436
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2440
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2444
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2448
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2452
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2474
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2478
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2500
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2504
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 482:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2508
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2518
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2522
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 485:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2526
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 486:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2530
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2534
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 488:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2538
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 489:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2542
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 490:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2546
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 491:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2550
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 492:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2554
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 493:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2558
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2562
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2566
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2576
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2580
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2584
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2589
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2594
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2599
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2605
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2610
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2615
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2619
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2623
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2628
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2633
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2638
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 510:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2642
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 511:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2646
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2656
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2666
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2670
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2674
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2678
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2682
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2686
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2692
		{
			yyVAL.str = ""
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2696
		{
			yyVAL.str = BooleanModeStr
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2700
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 524:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2704
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2708
		{
			yyVAL.str = QueryExpansionStr
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2714
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2718
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2724
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2728
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2732
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2740
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2744
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2750
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2754
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2762
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2766
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2774
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2779
		{
			yyVAL.expr = nil
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2783
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2788
		{
			yyVAL.str = string("")
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2792
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2798
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2802
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2808
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2813
		{
			yyVAL.expr = nil
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2817
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2827
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2831
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2837
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2841
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2857
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2861
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2865
		{
			yyVAL.expr = &NullVal{}
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2880
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2884
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2889
		{
			yyVAL.exprs = nil
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2893
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2898
		{
			yyVAL.expr = nil
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2902
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2907
		{
			yyVAL.orderBy = nil
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2911
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2917
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2921
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2927
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2932
		{
			yyVAL.str = AscScr
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2936
		{
			yyVAL.str = AscScr
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2940
		{
			yyVAL.str = DescScr
		}
	case 576:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2945
		{
			yyVAL.limit = nil
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2949
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2953
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2957
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2962
		{
			yyVAL.str = ""
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2966
		{
			yyVAL.str = ForUpdateStr
		}
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2970
		{
			yyVAL.str = ShareModeStr
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2975
		{
			yyVAL.triggers = nil
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2979
		{
			yyVAL.triggers = yyDollar[2].triggers
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2985
		{
			yyVAL.triggers = []Trigger{yyDollar[1].trigger}
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2989
		{
			yyVAL.triggers = append(yyDollar[1].triggers, yyDollar[3].trigger)
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2995
		{
			yyVAL.trigger = &WatermarkTrigger{}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2999
		{
			yyVAL.trigger = &DelayTrigger{Delay: yyDollar[3].expr}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3003
		{
			yyVAL.trigger = &CountingTrigger{Count: yyDollar[2].expr}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3016
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3020
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3024
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3029
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3033
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3037
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3044
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3048
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3052
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3056
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3061
		{
			yyVAL.updateExprs = nil
		}
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3065
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3075
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3081
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3085
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3091
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3097
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3107
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3111
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3117
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3123
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3127
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3133
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3137
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3141
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3145
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3152
		{
			yyVAL.bytes = []byte("charset")
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3163
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3167
		{
			yyVAL.expr = &Default{}
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3176
		{
			yyVAL.byt = 0
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3178
		{
			yyVAL.byt = 1
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3181
		{
			yyVAL.empty = struct{}{}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3183
		{
			yyVAL.empty = struct{}{}
		}
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3186
		{
			yyVAL.str = ""
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3188
		{
			yyVAL.str = IgnoreStr
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3192
		{
			yyVAL.empty = struct{}{}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3194
		{
			yyVAL.empty = struct{}{}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3196
		{
			yyVAL.empty = struct{}{}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3198
		{
			yyVAL.empty = struct{}{}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3200
		{
			yyVAL.empty = struct{}{}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3202
		{
			yyVAL.empty = struct{}{}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3204
		{
			yyVAL.empty = struct{}{}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3206
		{
			yyVAL.empty = struct{}{}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3208
		{
			yyVAL.empty = struct{}{}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3210
		{
			yyVAL.empty = struct{}{}
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3213
		{
			yyVAL.empty = struct{}{}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3215
		{
			yyVAL.empty = struct{}{}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3217
		{
			yyVAL.empty = struct{}{}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.empty = struct{}{}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3223
		{
			yyVAL.empty = struct{}{}
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3226
		{
			yyVAL.empty = struct{}{}
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3228
		{
			yyVAL.empty = struct{}{}
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3230
		{
			yyVAL.empty = struct{}{}
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3233
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3239
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3250
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3256
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3260
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3267
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3507
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3516
		{
			decNesting(yylex)
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3521
		{
			skipToEnd(yylex)
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3526
		{
			skipToEnd(yylex)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			skipToEnd(yylex)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3534
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
